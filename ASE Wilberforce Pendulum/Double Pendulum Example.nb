(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    391012,       7262]
NotebookOptionsPosition[    387172,       7132]
NotebookOutlinePosition[    387557,       7149]
CellTagsIndexPosition[    387514,       7146]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Double pendulum modelling
PHYS1201 HPO project, 2016\
\>", "Title",
 CellChangeTimes->{{3.6161824598524218`*^9, 3.6161824769312077`*^9}, {
   3.616195037174663*^9, 3.616195067049671*^9}, {3.616197179470544*^9, 
   3.616197208393834*^9}, {3.617839385189962*^9, 3.617839392523905*^9}, 
   3.6475554026545*^9, {3.677892194607285*^9, 3.677892211019038*^9}, {
   3.677897842200364*^9, 3.677897846581822*^9}, {3.677897884007393*^9, 
   3.677897894686063*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.6161978925218163`*^9, 3.616197894775776*^9}}],

Cell[TextData[{
 "Use this ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Notebook as a template for modelling your pendulum. It is assumed that you \
are familiar with Physics 2 Action Physics. It demonstrates how to model the \
double pendulum. Specifically, it shows how to use Mathematica to derive the \
Euler-Lagrange equations from the Lagrangian. And then how to numerically \
solve these equations.\n\nYou should be able to generalise from these \
examples to your pendulum.\n\nTo find out what a function does, right-click \
on it and select \[OpenCurlyDoubleQuote]Get Help\[CloseCurlyDoubleQuote] from \
the menu."
}], "Text",
 CellChangeTimes->{{3.616188311571933*^9, 3.61618831795302*^9}, {
  3.616188353810804*^9, 3.616188355143755*^9}, {3.616190250855813*^9, 
  3.61619025831851*^9}, {3.616197265168943*^9, 3.616197333357267*^9}, {
  3.617075250309331*^9, 3.617075288283927*^9}, {3.617839402747623*^9, 
  3.6178394066432*^9}, {3.67789221773102*^9, 3.677892234467836*^9}, {
  3.677892294025296*^9, 3.677892326838586*^9}, {3.6778924033092737`*^9, 
  3.67789245443386*^9}, {3.677892488481811*^9, 3.677892590044455*^9}, {
  3.677893177503483*^9, 3.6778932314439697`*^9}, {3.6778932786597433`*^9, 
  3.677893279114223*^9}, {3.677897851646397*^9, 3.6778978567976513`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The double pendulum", "Section",
 CellChangeTimes->{{3.6161978925218163`*^9, 3.616197894775776*^9}, {
   3.616198226028556*^9, 3.616198228170764*^9}, {3.617840266467514*^9, 
   3.617840268993816*^9}, {3.6178425054689283`*^9, 3.6178425063311977`*^9}, 
   3.6178426427275963`*^9}],

Cell[TextData[{
 "The double pendulum is made of two masses, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "2"], TraditionalForm]]],
 ", and two rods of lengths ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "2"], TraditionalForm]]],
 ". It may be described by two angles from the vertical, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "2"], TraditionalForm]]],
 ": see figure. These are zero on the vertical.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
1BYYbS3LE6drTkXb+/uXGP5/qXK6ug==
     "], {{0, 206}, {147, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIjkGEAkmdgMnB0cXJl
EmBgyM0rKQpyd1KIiIxSYL/AwMHAzSDMYMxgnZhcXOAYEOADUp2Xn5fKgAG+
XWMAGchwWRdkFqY8XsCVXFBUAqT/ALFRSmpxMgMDowGQnV1eUgAUZ5wDZIsk
ZYPZG0DsopAgZyD7CJDNlw5hXwGxkyDsJyB2EdATQPYXkPp0MJuJA2wOhC0D
YpekVoDsZXDOL6gsykzPKFEwMjAwUHBMyU9KVQiuLC5JzS1W8MxLzi8qyC9K
LElNAaqFuA8MBCEKQSGmYWhpaaFJor8JAlA8QFifA8Hhyyh2BiGGAMmlRWVQ
JiOTMWE+wow5EgwM/ksZGFj+IMRMehkYFugwMPBPRYipGTIwCOgzMOybAwCM
mVg/
       "], "RGB", "XYZ"], Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{93.27812500000003, Automatic},
   ImageSizeRaw->{147, 206},
   PlotRange->{{0, 147}, {0, 206}}]]],
 Cell["", "Input"],
 "\nNote that since there are two coordinates, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "2"], TraditionalForm]]],
 ", there are two Euler-Lagrange equations. These must be solved \
simultaneously."
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617842520924034*^9, 3.6178426013116493`*^9}, {3.617908488008209*^9, 
   3.6179086113608847`*^9}, {3.6475545869106617`*^9, 3.647554598894109*^9}, 
   3.677893452726809*^9}],

Cell[CellGroupData[{

Cell["Deriving the Euler-Lagrange equations", "Subsection",
 CellChangeTimes->{{3.6161978925218163`*^9, 3.616197894775776*^9}, {
   3.616198226028556*^9, 3.616198228170764*^9}, {3.617840266467514*^9, 
   3.617840268993816*^9}, {3.677893122882002*^9, 3.677893138167502*^9}, 
   3.6778935563054047`*^9}],

Cell[TextData[{
 "Start by deriving the kinetic and potential energies, and hence the \
Lagrangian. Although you should formulate the dynamics using the angles, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "2"], TraditionalForm]]],
 ",",
 " it is easier to set it up in Cartesian coordinates:",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617842649255542*^9, 
   3.617842681172673*^9}, {3.6178427433899813`*^9, 3.6178427552657747`*^9}, 
   3.647554603860495*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["x", "1"], "=", 
   RowBox[{
    SubscriptBox["l", "1"], " ", 
    RowBox[{"Sin", "[", " ", 
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}]}], ";", 
  RowBox[{
   SubscriptBox["y", "1"], "=", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["l", "1"]}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "2"], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["l", "1"], 
     RowBox[{"Sin", "[", " ", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{
     SubscriptBox["l", "2"], " ", 
     RowBox[{"Sin", "[", " ", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}]}]}], ";", 
  RowBox[{
   SubscriptBox["y", "2"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["l", "1"]}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], "-", 
    RowBox[{
     SubscriptBox["l", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.590374026308836*^9, 3.590374102282011*^9}, {
  3.590374148464842*^9, 3.590374157237874*^9}, {3.5904306082487164`*^9, 
  3.590430612737988*^9}, {3.590431665862043*^9, 3.5904317786738777`*^9}, {
  3.617842691882188*^9, 3.6178427340285807`*^9}, {3.647547195807789*^9, 
  3.647547235797318*^9}, {3.647547267191669*^9, 3.6475473096948843`*^9}}],

Cell[TextData[{
 "The kinetic energy is then:",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841389158684*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K", "=", 
  RowBox[{
   RowBox[{"0.5", " ", 
    SubscriptBox["m", "1"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         SubscriptBox["x", "1"], ",", "t"}], "]"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         SubscriptBox["y", "1"], ",", "t"}], "]"}], "^", "2"}]}], ")"}]}], 
   "+", 
   RowBox[{"0.5", " ", 
    SubscriptBox["m", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         SubscriptBox["x", "2"], ",", "t"}], "]"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         SubscriptBox["y", "2"], ",", "t"}], "]"}], "^", "2"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.617842820559903*^9, 3.617842846558618*^9}, {
   3.617843016585452*^9, 3.617843016944491*^9}, {3.6178433886341677`*^9, 
   3.617843410001338*^9}, 3.617909806845709*^9, 3.617920386750393*^9, {
   3.647555662702559*^9, 3.647555725265458*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.5`", " ", 
   SubscriptBox["m", "1"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], "2"], " ", 
      SubsuperscriptBox["l", "1", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], "2"], " ", 
      SubsuperscriptBox["l", "1", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{"0.5`", " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "1"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "2"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "1"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "2"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6179203908950577`*^9, 3.618476162140522*^9, 3.6184762539524107`*^9, {
   3.618507720234638*^9, 3.618507738769843*^9}, 3.618508022807069*^9, 
   3.6185109566298447`*^9, 3.6475556489462137`*^9, 3.6475557043160057`*^9, 
   3.647998151232669*^9, {3.677894215028673*^9, 3.677894243284112*^9}, 
   3.677896200572957*^9, 3.677896450907086*^9, 3.677896530915491*^9, 
   3.677897999928562*^9, 3.680204788860963*^9, 3.680206333573855*^9, 
   3.680206534718314*^9, 3.680206728861176*^9}]
}, Open  ]],

Cell[TextData[{
 "Use FullSimplify to simplify trigonmetric terms.",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.617842876982068*^9, 3.617842878709022*^9}, {3.617842931028886*^9, 
   3.617843006072073*^9}, {3.617843044688002*^9, 3.6178430453665457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K", "=", 
  RowBox[{"FullSimplify", "[", "K", "]"}]}]], "Input",
 CellChangeTimes->{{3.617842820559903*^9, 3.617842846558618*^9}, {
  3.6178430221403112`*^9, 3.617843025023624*^9}, {3.6778934765631323`*^9, 
  3.677893477000289*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["l", "1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.5`", " ", 
      SubscriptBox["m", "1"]}], "+", 
     RowBox[{"0.5`", " ", 
      SubscriptBox["m", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "1"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"1.`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
   SubscriptBox["l", "1"], " ", 
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "1"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "2"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"0.5`", " ", 
   SubsuperscriptBox["l", "2", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "2"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.617920393675511*^9, 3.618476162214365*^9, 3.6184762540203733`*^9, 
   3.618507742448238*^9, 3.61850803530359*^9, 3.618510959741722*^9, 
   3.64755571068421*^9, 3.6479981513116417`*^9, {3.677894215108972*^9, 
   3.6778942433559723`*^9}, 3.677896203844287*^9, 3.6778964539455767`*^9, 
   3.677896532917795*^9, 3.677898000022711*^9, 3.68020478894446*^9, 
   3.6802063336577053`*^9, 3.680206534807992*^9, 3.680206728943472*^9}]
}, Open  ]],

Cell[TextData[{
 "Choose the potential energy zero to be at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "2"], TraditionalForm]]],
 " = 0",
 " :",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.617842876982068*^9, 3.617842878709022*^9}, {3.617842931028886*^9, 
   3.617842945466219*^9}, 3.647554626436804*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "=", 
  RowBox[{"g", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "1"], " ", 
      SubscriptBox["y", "1"]}], "+", " ", 
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      SubscriptBox["y", "2"]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.617842820559903*^9, 3.617842846558618*^9}, {
   3.617842884799177*^9, 3.6178428852612257`*^9}, {3.6178430602948933`*^9, 
   3.617843060646805*^9}, 3.617843432507084*^9, 3.617909817781354*^9, 
   3.617920402916795*^9, {3.6184761473139544`*^9, 3.6184761493900537`*^9}, 
   3.6185079639930153`*^9, {3.647555721801909*^9, 3.647555741579462*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"g", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], " ", 
     SubscriptBox["l", "1"], " ", 
     SubscriptBox["m", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], " ", 
        SubscriptBox["l", "1"]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "2"]}]}], ")"}], " ", 
     SubscriptBox["m", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6179204078641567`*^9, 3.618476162239936*^9, 3.6184762540523376`*^9, 
   3.61850774565271*^9, 3.618507974200842*^9, 3.618508038092391*^9, 
   3.618510962277898*^9, 3.647555742431904*^9, 3.647998151373036*^9, {
   3.677894215149441*^9, 3.677894243426798*^9}, 3.6778962070703287`*^9, 
   3.677896457217902*^9, 3.677896536651359*^9, 3.677898000078998*^9, 
   3.680204788968484*^9, 3.6802063337033777`*^9, 3.68020653484719*^9, 
   3.680206728972*^9}]
}, Open  ]],

Cell[TextData[{
 "Use FullSimplify to simplify trigonmetric terms.",
 Cell["", "Input"],
 " "
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.617842876982068*^9, 3.617842878709022*^9}, {3.617842931028886*^9, 
   3.617843006072073*^9}, 3.6778935013940077`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "=", 
  RowBox[{"FullSimplify", "[", "V", "]"}]}]], "Input",
 CellChangeTimes->{{3.617842820559903*^9, 3.617842846558618*^9}, {
  3.6178430221403112`*^9, 3.617843025023624*^9}, {3.6178430552879667`*^9, 
  3.617843057638445*^9}, {3.6778934820189323`*^9, 3.6778934825308*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "g"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "2"], " ", 
     SubscriptBox["m", "2"]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "1"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["m", "1"], "+", 
       SubscriptBox["m", "2"]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.617920409866007*^9, 3.618476162291079*^9, 3.618476254101215*^9, 
   3.618507750948984*^9, 3.618507976666369*^9, 3.618508040485445*^9, 
   3.618510965158927*^9, 3.6475557473562193`*^9, 3.647998151455223*^9, {
   3.6778942152319813`*^9, 3.677894243636353*^9}, 3.6778962090005083`*^9, 
   3.677896459213541*^9, 3.6778965390925703`*^9, 3.677898000150669*^9, 
   3.680204789048057*^9, 3.680206333780984*^9, 3.680206534920061*^9, 
   3.680206729046568*^9}]
}, Open  ]],

Cell[TextData[{
 "The Lagrangian :",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.617842876982068*^9, 3.617842878709022*^9}, {3.617842931028886*^9, 
   3.617842945466219*^9}, {3.61784308835077*^9, 3.6178430938525953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"L", "=", 
  RowBox[{"K", "-", "V"}]}]], "Input",
 CellChangeTimes->{{3.617843098129216*^9, 3.6178431147095222`*^9}, {
  3.6178434580245113`*^9, 3.617843458975494*^9}, {3.677893508033986*^9, 
  3.677893508465375*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "2"], " ", 
      SubscriptBox["m", "2"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "1"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["m", "1"], "+", 
        SubscriptBox["m", "2"]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   SubsuperscriptBox["l", "1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.5`", " ", 
      SubscriptBox["m", "1"]}], "+", 
     RowBox[{"0.5`", " ", 
      SubscriptBox["m", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "1"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"1.`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
   SubscriptBox["l", "1"], " ", 
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "1"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "2"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"0.5`", " ", 
   SubsuperscriptBox["l", "2", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "2"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.617920420616213*^9, 3.618476162323001*^9, 3.618476254135491*^9, 
   3.618507754321225*^9, 3.618507980301371*^9, 3.618508071981401*^9, 
   3.618510966896472*^9, 3.6475557708855057`*^9, 3.6479981515239162`*^9, {
   3.677894215275248*^9, 3.677894243677651*^9}, 3.677896212751981*^9, 
   3.677896462654111*^9, 3.67789654069812*^9, 3.677898000199641*^9, 
   3.68020478910389*^9, 3.6802063338344727`*^9, 3.680206534960411*^9, 
   3.680206729104682*^9}]
}, Open  ]],

Cell[TextData[{
 "Next calculate the derivatives in the Euler-Lagrange equation:",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.61784155916124*^9, 3.617841615277656*^9}, 3.617843150356559*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["dLd\[Theta]", "1"], "=", 
  RowBox[{"D", "[", 
   RowBox[{"L", ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    SubscriptBox["\[Theta]", "1"], " ", "derivative"}], " ", "*)"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.5903749676365747`*^9, 3.590374988263489*^9}, {
   3.590430291449876*^9, 3.590430296793092*^9}, {3.590432198271379*^9, 
   3.590432200687808*^9}, {3.617841630655697*^9, 3.617841662061294*^9}, {
   3.6179080865121717`*^9, 3.6179080868865547`*^9}, {3.617908189641698*^9, 
   3.617908189922418*^9}, {3.6179098340599833`*^9, 3.617909835586547*^9}, {
   3.647547351819681*^9, 3.647547393674719*^9}, 3.647555827198729*^9, 
   3.677893512745764*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "g"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
   SubscriptBox["l", "1"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["m", "1"], "+", 
     SubscriptBox["m", "2"]}], ")"}]}], "-", 
  RowBox[{"1.`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
   SubscriptBox["l", "1"], " ", 
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "1"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "2"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.647555832417986*^9, 3.647998151588869*^9, {3.677894215340901*^9, 
   3.6778942437394047`*^9}, 3.677896215340554*^9, 3.677896465233891*^9, 
   3.677896542495367*^9, 3.677898000259391*^9, 3.6802047891528788`*^9, 
   3.680206333883771*^9, 3.680206535010449*^9, 3.680206729153742*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["dLd\[Theta]", "2"], "=", 
  RowBox[{"D", "[", 
   RowBox[{"L", ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    SubscriptBox["\[Theta]", "2"], " ", "derivative"}], " ", "*)"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.5903749676365747`*^9, 3.590374988263489*^9}, {
   3.590430291449876*^9, 3.590430296793092*^9}, {3.590432198271379*^9, 
   3.590432200687808*^9}, {3.617841630655697*^9, 3.617841662061294*^9}, {
   3.61784317121268*^9, 3.61784317577052*^9}, {3.617908088150817*^9, 
   3.617908088534728*^9}, {3.617908192322283*^9, 3.617908192458111*^9}, 
   3.617909844772621*^9, {3.647547367865715*^9, 3.647547399138589*^9}, {
   3.6475558366462917`*^9, 3.6475558408680773`*^9}, 3.677893514826408*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "g"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "2"]}], "+", 
  RowBox[{"1.`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
   SubscriptBox["l", "1"], " ", 
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "1"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "2"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.617920439218705*^9, 3.6184761623899403`*^9, 3.618476254201388*^9, 
   3.618507762822516*^9, 3.618508081081128*^9, 3.6185109740624104`*^9, 
   3.647555842100259*^9, 3.647998151657196*^9, {3.677894215406273*^9, 
   3.677894243808331*^9}, 3.6778962187756166`*^9, 3.6778964671461697`*^9, 
   3.67789654641887*^9, 3.677898000308798*^9, 3.680204789261099*^9, 
   3.680206333995932*^9, 3.680206535061409*^9, 3.680206729203355*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["dLdashd\[Theta]", "1"], "=", 
  RowBox[{"D", "[", 
   RowBox[{"L", ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "'"}], "[", "t", "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "'"}], " ", "derivative"}], " ", "*)"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.5903749676365747`*^9, 3.590374988263489*^9}, {
   3.590430291449876*^9, 3.590430296793092*^9}, {3.590432198271379*^9, 
   3.590432200687808*^9}, {3.617841630655697*^9, 3.617841662061294*^9}, {
   3.61784317121268*^9, 3.617843230072071*^9}, {3.617908089742504*^9, 
   3.617908090094702*^9}, {3.61790819437037*^9, 3.617908194490303*^9}, 
   3.61790984660246*^9, {3.647547403490423*^9, 3.647547421597739*^9}, {
   3.647555846572031*^9, 3.647555852331772*^9}, 3.677893516969717*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SubsuperscriptBox["l", "1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.5`", " ", 
      SubscriptBox["m", "1"]}], "+", 
     RowBox[{"0.5`", " ", 
      SubscriptBox["m", "2"]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "1"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
   SubscriptBox["l", "1"], " ", 
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "2"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.617920448652658*^9, 3.618476162423737*^9, 3.6184762542338133`*^9, 
   3.618507767055882*^9, 3.6185080830655127`*^9, 3.618510975914147*^9, 
   3.647555853652771*^9, 3.647998151722933*^9, {3.6778942154735823`*^9, 
   3.677894243873011*^9}, 3.67789622070728*^9, 3.6778964688416452`*^9, 
   3.6778965480308228`*^9, 3.677898000363058*^9, 3.68020478930785*^9, 
   3.6802063340505323`*^9, 3.680206535110326*^9, 3.680206729253648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["dLdashd\[Theta]", "2"], "=", 
  RowBox[{"D", "[", 
   RowBox[{"L", ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "'"}], "[", "t", "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "'"}], " ", "derivative"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5903749676365747`*^9, 3.590374988263489*^9}, {
   3.590430291449876*^9, 3.590430296793092*^9}, {3.590432198271379*^9, 
   3.590432200687808*^9}, {3.617841630655697*^9, 3.617841662061294*^9}, {
   3.61784317121268*^9, 3.61784324224813*^9}, 3.6179080929844503`*^9, {
   3.6179081965533257`*^9, 3.617908196657729*^9}, 3.617909848810233*^9, {
   3.647547425989655*^9, 3.647547437601544*^9}, 3.64754753154311*^9, {
   3.647555861031002*^9, 3.647555865569944*^9}, 3.677893518953817*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"1.`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
   SubscriptBox["l", "1"], " ", 
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "1"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", 
   SubsuperscriptBox["l", "2", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "2"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.617920453135675*^9, 3.618476162455269*^9, 3.6184762542855387`*^9, 
   3.618507769706868*^9, 3.618508086465509*^9, 3.61851097794658*^9, 
   3.6475558671904488`*^9, 3.647998151790344*^9, {3.6778942155412483`*^9, 
   3.677894243940338*^9}, 3.6778962225092993`*^9, 3.6778964705512943`*^9, 
   3.677896549681381*^9, 3.677898000411985*^9, 3.680204789416998*^9, 
   3.680206334163978*^9, 3.680206535161018*^9, 3.680206729308538*^9}]
}, Open  ]],

Cell[TextData[{
 "Calculate the Euler-Lagrange equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.61784155916124*^9, 3.617841615277656*^9}, 3.617843150356559*^9, {
   3.617843258120122*^9, 3.617843272154904*^9}, {3.647555884895253*^9, 
   3.64755588740834*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["ELE\[Theta]", "1"], "=", " ", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SubscriptBox["dLd\[Theta]", "1"], "-", 
     RowBox[{"D", "[", 
      RowBox[{
       SubscriptBox["dLdashd\[Theta]", "1"], ",", "t"}], "]"}]}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.590375053673512*^9, 3.5903750950546093`*^9}, {
   3.5903752031410217`*^9, 3.5903752037047873`*^9}, {3.5904303158560123`*^9, 
   3.590430318482587*^9}, {3.590431008337227*^9, 3.590431008590486*^9}, {
   3.590432266749366*^9, 3.5904322695522327`*^9}, {3.617843292988533*^9, 
   3.617843356515646*^9}, {3.617843478504912*^9, 3.617843478942342*^9}, {
   3.61790809730179*^9, 3.617908097677682*^9}, 3.61790993920033*^9, {
   3.647547452675988*^9, 3.6475475142637777`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"0", "\[Equal]", 
  RowBox[{
   SubscriptBox["l", "1"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "1"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.`"}], " ", "g", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"1.`", " ", 
         SubscriptBox["l", "1"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.`"}], " ", "g", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"1.`", " ", 
         SubscriptBox["l", "1"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SubscriptBox["l", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1.`"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Theta]", "2"], "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
           RowBox[{"1.`", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6179204563882847`*^9, 3.618476162922819*^9, 3.6184762547223787`*^9, 
   3.618507774550902*^9, 3.618508089678056*^9, 3.618510979934304*^9, 
   3.647555873758752*^9, 3.6479981520115633`*^9, {3.677894215818522*^9, 
   3.677894244224195*^9}, {3.67789622507281*^9, 3.677896229659932*^9}, 
   3.6778964751490498`*^9, 3.677896551902769*^9, 3.6778980006739683`*^9, 
   3.68020478976293*^9, 3.680206334494705*^9, 3.680206535399457*^9, 
   3.680206729573497*^9}]
}, Open  ]],

Cell[TextData[{
 "Calculate the Euler-Lagrange equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.61784155916124*^9, 3.617841615277656*^9}, 3.617843150356559*^9, {
   3.617843258120122*^9, 3.617843272154904*^9}, 3.617843632242052*^9, {
   3.647555893181796*^9, 3.647555895688685*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["ELE\[Theta]", "2"], "=", " ", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SubscriptBox["dLd\[Theta]", "2"], "-", 
     RowBox[{"D", "[", 
      RowBox[{
       SubscriptBox["dLdashd\[Theta]", "2"], ",", "t"}], "]"}]}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.590375053673512*^9, 3.5903750950546093`*^9}, {
   3.5903752031410217`*^9, 3.5903752037047873`*^9}, {3.5904303158560123`*^9, 
   3.590430318482587*^9}, {3.590431008337227*^9, 3.590431008590486*^9}, {
   3.590432266749366*^9, 3.5904322695522327`*^9}, {3.617843292988533*^9, 
   3.617843356515646*^9}, {3.617843478504912*^9, 3.617843478942342*^9}, {
   3.617843634441271*^9, 3.617843639496941*^9}, {3.617908098895195*^9, 
   3.6179080992226467`*^9}, 3.6179099412627077`*^9, {3.647547469147595*^9, 
   3.647547470601428*^9}, {3.647547524889181*^9, 3.647547536240654*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"0", "\[Equal]", 
  RowBox[{
   SubscriptBox["l", "2"], " ", 
   SubscriptBox["m", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.`"}], " ", "g", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["l", "1"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1.`", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "1"], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"1.`", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
     RowBox[{"1.`", " ", 
      SubscriptBox["l", "2"], " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6179204588404016`*^9, 3.618476163055292*^9, 3.6184762548980494`*^9, 
   3.6185077776786137`*^9, 3.6185080922018433`*^9, 3.6185109826811438`*^9, 
   3.6475558988301687`*^9, 3.647998152230955*^9, {3.677894216133626*^9, 
   3.677894244379333*^9}, 3.67789623151831*^9, 3.677896477332443*^9, 
   3.67789655441755*^9, 3.6778980008115664`*^9, 3.68020479008111*^9, 
   3.680206334865307*^9, 3.680206535527389*^9, 3.680206729709866*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerically solving the Euler-Lagrange equations", "Subsection",
 CellChangeTimes->{{3.6161978925218163`*^9, 3.616197894775776*^9}, {
   3.616198226028556*^9, 3.616198228170764*^9}, {3.617840266467514*^9, 
   3.617840268993816*^9}, {3.677893122882002*^9, 3.677893153150879*^9}, 
   3.67789357155296*^9, 3.677893752489349*^9}],

Cell["Choose the parameters.", "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.61784155916124*^9, 3.617841615277656*^9}, 3.617841779256301*^9, {
   3.617841887508267*^9, 3.617841905706627*^9}, {3.6178419957599697`*^9, 
   3.617841996078866*^9}, {3.61790919908206*^9, 3.617909208545732*^9}, {
   3.6778935389685993`*^9, 3.677893539808379*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["m", "1"], "=", "1"}], ";", 
  RowBox[{
   SubscriptBox["m", "2"], "=", "1"}], ";", " ", 
  RowBox[{"g", "=", "9.8"}], ";", 
  RowBox[{
   SubscriptBox["l", "1"], "=", "1"}], ";", 
  RowBox[{
   SubscriptBox["l", "2"], "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.590432724366548*^9, 3.590432847193379*^9}, 
   3.590432909772398*^9, 3.590433095994467*^9, 3.590433127797935*^9, {
   3.590433217091156*^9, 3.590433240387854*^9}, 3.590437634905241*^9, {
   3.6178478048645477`*^9, 3.617847876709351*^9}, 3.617909195237747*^9, {
   3.647547541986375*^9, 3.647547560021397*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "Solve the Euler-Lagrange equations:",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.61784155916124*^9, 3.617841615277656*^9}, 3.617841779256301*^9, {
   3.617841887508267*^9, 3.617841905706627*^9}, {3.6178419957599697`*^9, 
   3.617841996078866*^9}, 3.617909214849415*^9, 3.677893576127331*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solndp", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ELE\[Theta]", "1"], ",", 
      SubscriptBox["ELE\[Theta]", "2"], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "[", "0", "]"}], "\[Equal]", "0"}], 
      ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "0", "]"}], "\[Equal]", 
       RowBox[{"Pi", "/", "2"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "'"}], "[", "0", "]"}], "\[Equal]", 
       "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "'"}], "[", "0", "]"}], "\[Equal]", 
       "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Theta]", "1"], ",", 
      SubscriptBox["\[Theta]", "2"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.590432724366548*^9, 3.590432847193379*^9}, 
   3.590432909772398*^9, 3.590433095994467*^9, 3.590433127797935*^9, {
   3.590433217091156*^9, 3.590433240387854*^9}, 3.590437634905241*^9, {
   3.6178478048645477`*^9, 3.617847876709351*^9}, {3.617909222116585*^9, 
   3.6179092446761*^9}, {3.647547580401683*^9, 3.647547620240904*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AANgN+Z0xO1t+433D
3cQ/Ts8aVd9NcT8/lvq2a77VP6GrqForhbQ/UPQI4wkn4D8KdIL5LnzXPzg0
cm9ZVOU/JpwTNPWV3z/3vGVz/fHqPyee/a96dNE/r0FwQdgX8D+CN4MyLWi8
v07J8gTc7vI/LtuGlgVH5b9JHOSKnbj1P5voBqyEpO+/GA6ZlmZS+D/x78Iv
wHDvv1IkE95ZJPs/95/rcMut5b9g2VCrVMb9Px9Cim3ipLa/5ax+nYYtAEAV
XvbDoNrbP1B/NwP4kwFAoqF/WPWg5z8lIdIrbeICQJvRz7yywOY/MFVPcvdM
BEB+0rYp6drVP+nuA5rgsAVAEBW6BFDZsT8MWJqEzfwGQD5NSOcNDMC/ZVMT
jc9kCEDkndaLR5XRvygebljVtAlAwb/QkH1Hzb8he6tB8CALQG9moB/2OcU/
xz0gDGqGDEAKOvZjtsbRP9fPdpnn0w1AVjGGkE/4xD8d9K9Eej0PQKEqq5iA
YKK/53NlWYhHEEBmveaSX0HRv5WgDgED7RBApYR5hAqw479eFqk3iKARQG9K
skOOL+i/3HO0Tw9IEkACWMi9D2bhv3Uasfag/RJAoajuKidMo7/lc0kO4q8T
QIiGUQT0leM/CrVSByVWFEDsGehfFUfuP0o/TY9yChVARya6T64i8D8/sbj4
wbIVQPz1sPk3f+g/C9a/0sBXFkB0NbWdJLDQP/JDuDvKChdAuhjI28jmyL+O
mSGG1bEXQBHSyof9nd2/RTh8X+tmGEAN4BPiIyzcv7G+RxoDEBlAHqp7B4Cg
wL/0965FyrUZQFWxa70UJ5K/UnoHAJxpGkDw8zDHZFwav2Xk0JtvERtAM9xg
Dz3Qaj+Tl4vGTccbQLAIDAu5PaW/l/3hYdt5HEDXelxktg/Tv1BLqd5qIB1A
2LoQbT6Z378k4mHqBNUdQGACCC8UaNS/rWCL16B9HkDkj/4eNqmkPw2SUDXs
Ih9AXBX4OMTC4D+IDAciQtYfQAgWFhRaIO4/XDcX+Mw+IECdrvDrQBXwPwKN
oyZ+mSBAWWB3tQGp6D8TvH0Nh/IgQN2ogGMWq8o//l4Q5ZBFIUB7ce+cWE3X
v3emGwSgnyFAAaYCrvD45r/KYd8TsPMhQHro9HYTG+i/q8Eba8VOIkCi/JXZ
2S3av/f6pXoyqCJA8FynzzpLu78eqOh6oPsiQB3u7/p+Dro/0vmjwhNWI0Dk
0QYK913RP2G/F/uHqiNApJ9w/CrN0D8yFFD6//8jQDL1ZYg2ara/7tzT0g==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.9888327941801153, 
                    1.0084670175878203`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AANgN+Z0xO1t+433D
3cQ/Ts8aVd9NcT8/lvq2a77VP6GrqForhbQ/UPQI4wkn4D8KdIL5LnzXPzg0
cm9ZVOU/JpwTNPWV3z/3vGVz/fHqPyee/a96dNE/r0FwQdgX8D+CN4MyLWi8
v07J8gTc7vI/LtuGlgVH5b9JHOSKnbj1P5voBqyEpO+/GA6ZlmZS+D/x78Iv
wHDvv1IkE95ZJPs/95/rcMut5b9g2VCrVMb9Px9Cim3ipLa/5ax+nYYtAEAV
XvbDoNrbP1B/NwP4kwFAoqF/WPWg5z8lIdIrbeICQJvRz7yywOY/MFVPcvdM
BEB+0rYp6drVP+nuA5rgsAVAEBW6BFDZsT8MWJqEzfwGQD5NSOcNDMC/ZVMT
jc9kCEDkndaLR5XRvygebljVtAlAwb/QkH1Hzb8he6tB8CALQG9moB/2OcU/
xz0gDGqGDEAKOvZjtsbRP9fPdpnn0w1AVjGGkE/4xD8d9K9Eej0PQKEqq5iA
YKK/53NlWYhHEEBmveaSX0HRv5WgDgED7RBApYR5hAqw479eFqk3iKARQG9K
skOOL+i/3HO0Tw9IEkACWMi9D2bhv3Uasfag/RJAoajuKidMo7/lc0kO4q8T
QIiGUQT0leM/CrVSByVWFEDsGehfFUfuP0o/TY9yChVARya6T64i8D8/sbj4
wbIVQPz1sPk3f+g/C9a/0sBXFkB0NbWdJLDQP/JDuDvKChdAuhjI28jmyL+O
mSGG1bEXQBHSyof9nd2/RTh8X+tmGEAN4BPiIyzcv7G+RxoDEBlAHqp7B4Cg
wL/0965FyrUZQFWxa70UJ5K/UnoHAJxpGkDw8zDHZFwav2Xk0JtvERtAM9xg
Dz3Qaj+Tl4vGTccbQLAIDAu5PaW/l/3hYdt5HEDXelxktg/Tv1BLqd5qIB1A
2LoQbT6Z378k4mHqBNUdQGACCC8UaNS/rWCL16B9HkDkj/4eNqmkPw2SUDXs
Ih9AXBX4OMTC4D+IDAciQtYfQAgWFhRaIO4/XDcX+Mw+IECdrvDrQBXwPwKN
oyZ+mSBAWWB3tQGp6D8TvH0Nh/IgQN2ogGMWq8o//l4Q5ZBFIUB7ce+cWE3X
v3emGwSgnyFAAaYCrvD45r/KYd8TsPMhQHro9HYTG+i/q8Eba8VOIkCi/JXZ
2S3av/f6pXoyqCJA8FynzzpLu78eqOh6oPsiQB3u7/p+Dro/0vmjwhNWI0Dk
0QYK913RP2G/F/uHqiNApJ9w/CrN0D8yFFD6//8jQDL1ZYg2ara/7tzT0g==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.9888327941801153, 
                    1.0084670175878203`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5rKkRU+yH5P1t+433D
3cQ/1T0J7voL9z8/lvq2a77VPwYJvW0/sO8/UPQI4wkn4D8P/PrLrCDIPzg0
cm9ZVOU/a0j6DAx+4L/3vGVz/fHqP8eh2FJ6Ku2/r0FwQdgX8D+obcj1XR3t
v07J8gTc7vI/kC91KtTi3L9JHOSKnbj1P9kxwjl777K/GA6ZlmZS+D8fQN+C
dnS0P1IkE95ZJPs/EckSkVqrpD9g2VCrVMb9P3DcY0H/L9W/5ax+nYYtAEDf
5gG8NpLgv1B/NwP4kwFAOVtxd1FS0r8lIdIrbeICQEXJYMuWp8o/MFVPcvdM
BECg7IIeUNHuP+nuA5rgsAVA5Vmr7hHL9T8MWJqEzfwGQOKS3bbagvY/ZVMT
jc9kCEDGFB8bgh/yPygebljVtAlAyVmGJBKD4j8he6tB8CALQOynN+JJp9q/
xz0gDGqGDECvbt6oozXxv9fPdpnn0w1AqDMuLnMf9r8d9K9Eej0PQNo3iiD9
VPa/53NlWYhHEEB9jh8RU1Dxv5WgDgED7RBA6Cefp/Ec279eFqk3iKARQBqs
jtq/Wck/3HO0Tw9IEkBFLtIB0fPfP3Uasfag/RJAzKtiL88o2z/lc0kO4q8T
QOpdgBD+OXU/CrVSByVWFEA040Eoqrq2v0o/TY9yChVAzhQQSYv3oj8/sbj4
wbIVQCxFNPQ7jdU/C9a/0sBXFkBH97IQTcHpP/JDuDvKChdAUjWQnF7w7T+O
mSGG1bEXQCixjh6dI+U/RTh8X+tmGEAAHYpZwL8gP7G+RxoDEBlAHsq67Ko4
67/0965FyrUZQA6gNG9kivW/UnoHAJxpGkBLHNBtpAT5v2Xk0JtvERtAu/Ti
/j7j97+Tl4vGTccbQPukccoVzPG/l/3hYdt5HEB5ZYsnKsPVv1BLqd5qIB1A
DnctVweh2z8k4mHqBNUdQAru7mprauw/rWCL16B9HkAoVPac2YfuPw2SUDXs
Ih9A0wuoFiBj4z+IDAciQtYfQGYN1izmqMI/XDcX+Mw+IEDRfA8BTOqtvwKN
oyZ+mSBAwjK1p1kEt78TvH0Nh/IgQESqmFnlJc0//l4Q5ZBFIUBPjTxOUhzg
P3emGwSgnyFAyk8OO2HE1T/KYd8TsPMhQGYZwtTWKLq/q8Eba8VOIkDuNSVc
K0Prv/f6pXoyqCJAzzT8L+sV9b8eqOh6oPsiQLwRRNmyhva/0vmjwhNWI0A8
71SD0cXyv2G/F/uHqiNASgQWdPEE5b8yFFD6//8jQHLSYz7oStA/ngTP0w==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-1.5636333741729398`, 
                    1.5707963267947445`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5rKkRU+yH5P1t+433D
3cQ/1T0J7voL9z8/lvq2a77VPwYJvW0/sO8/UPQI4wkn4D8P/PrLrCDIPzg0
cm9ZVOU/a0j6DAx+4L/3vGVz/fHqP8eh2FJ6Ku2/r0FwQdgX8D+obcj1XR3t
v07J8gTc7vI/kC91KtTi3L9JHOSKnbj1P9kxwjl777K/GA6ZlmZS+D8fQN+C
dnS0P1IkE95ZJPs/EckSkVqrpD9g2VCrVMb9P3DcY0H/L9W/5ax+nYYtAEDf
5gG8NpLgv1B/NwP4kwFAOVtxd1FS0r8lIdIrbeICQEXJYMuWp8o/MFVPcvdM
BECg7IIeUNHuP+nuA5rgsAVA5Vmr7hHL9T8MWJqEzfwGQOKS3bbagvY/ZVMT
jc9kCEDGFB8bgh/yPygebljVtAlAyVmGJBKD4j8he6tB8CALQOynN+JJp9q/
xz0gDGqGDECvbt6oozXxv9fPdpnn0w1AqDMuLnMf9r8d9K9Eej0PQNo3iiD9
VPa/53NlWYhHEEB9jh8RU1Dxv5WgDgED7RBA6Cefp/Ec279eFqk3iKARQBqs
jtq/Wck/3HO0Tw9IEkBFLtIB0fPfP3Uasfag/RJAzKtiL88o2z/lc0kO4q8T
QOpdgBD+OXU/CrVSByVWFEA040Eoqrq2v0o/TY9yChVAzhQQSYv3oj8/sbj4
wbIVQCxFNPQ7jdU/C9a/0sBXFkBH97IQTcHpP/JDuDvKChdAUjWQnF7w7T+O
mSGG1bEXQCixjh6dI+U/RTh8X+tmGEAAHYpZwL8gP7G+RxoDEBlAHsq67Ko4
67/0965FyrUZQA6gNG9kivW/UnoHAJxpGkBLHNBtpAT5v2Xk0JtvERtAu/Ti
/j7j97+Tl4vGTccbQPukccoVzPG/l/3hYdt5HEB5ZYsnKsPVv1BLqd5qIB1A
DnctVweh2z8k4mHqBNUdQAru7mprauw/rWCL16B9HkAoVPac2YfuPw2SUDXs
Ih9A0wuoFiBj4z+IDAciQtYfQGYN1izmqMI/XDcX+Mw+IEDRfA8BTOqtvwKN
oyZ+mSBAwjK1p1kEt78TvH0Nh/IgQESqmFnlJc0//l4Q5ZBFIUBPjTxOUhzg
P3emGwSgnyFAyk8OO2HE1T/KYd8TsPMhQGYZwtTWKLq/q8Eba8VOIkDuNSVc
K0Prv/f6pXoyqCJAzzT8L+sV9b8eqOh6oPsiQLwRRNmyhva/0vmjwhNWI0A8
71SD0cXyv2G/F/uHqiNASgQWdPEE5b8yFFD6//8jQHLSYz7oStA/ngTP0w==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-1.5636333741729398`, 
                    1.5707963267947445`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.617920466304379*^9, 3.618476163356295*^9, 3.6184762549513807`*^9, 
   3.618507782599185*^9, 3.618508098048861*^9, 3.6185109876319933`*^9, 
   3.647555907323852*^9, 3.6479981523430843`*^9, {3.6778942164066133`*^9, 
   3.6778942444664392`*^9}, 3.6778962372657413`*^9, 3.677896270549171*^9, 
   3.677896481468327*^9, 3.677896558913536*^9, 3.6778980010672913`*^9, 
   3.6802047902544403`*^9, 3.6802063350197763`*^9, 3.680206535716469*^9, 
   3.680206729949563*^9}]
}, Open  ]],

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "2"], TraditionalForm]]],
 " coordinates vs time. Include a title for the plot and axes labels with \
units."
}], "Text",
 CellChangeTimes->{{3.590374538748774*^9, 3.590374558851033*^9}, {
   3.590374637679388*^9, 3.590374639980891*^9}, {3.590374805090843*^9, 
   3.5903748062886887`*^9}, {3.59037487941078*^9, 3.590374902192649*^9}, {
   3.590374959412136*^9, 3.590374962553465*^9}, {3.590375001625821*^9, 
   3.590375005904172*^9}, {3.590375042409362*^9, 3.590375050019693*^9}, {
   3.590375215434483*^9, 3.590375216008314*^9}, 3.590432264390944*^9, {
   3.590432656685926*^9, 3.590432686493533*^9}, {3.590432924287956*^9, 
   3.5904329306528587`*^9}, {3.5904338074881372`*^9, 
   3.5904338093554773`*^9}, {3.617909996509025*^9, 3.6179099986272573`*^9}, {
   3.617910042690895*^9, 3.6179100677687263`*^9}, {3.647555916106997*^9, 
   3.647555924015297*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["y", "2"]}], "}"}], "/.", "solndp"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<t (s)\>\"", ",", 
       "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(y\), \(1\)]\), \
\!\(TraditionalForm\`\*SubscriptBox[\(y\), \(2\)]\) (m)\>\""}], "}"}]}], ",", 
    
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<\!\(\*SubscriptBox[\(y\), \(1\)]\) and \
\!\(TraditionalForm\`\*SubscriptBox[\(y\), \(2\)]\) vs time.\>\""}]}], "]"}], 
  "  "}]], "Input",
 CellChangeTimes->{{3.590432853136683*^9, 3.590432913563531*^9}, {
   3.590432953295732*^9, 3.590432961330567*^9}, {3.5904331647800417`*^9, 
   3.5904331787243433`*^9}, 3.5904376401349363`*^9, {3.617847888797811*^9, 
   3.6178479087570887`*^9}, {3.6178483651865587`*^9, 3.617848365392972*^9}, {
   3.617908109326754*^9, 3.6179081099825373`*^9}, {3.61790923661961*^9, 
   3.617909241250787*^9}, {3.617909283553341*^9, 3.617909326167322*^9}, 
   3.617910074466002*^9, 3.617920496026587*^9, {3.647555935388624*^9, 
   3.647555971032783*^9}, 3.6778936370615263`*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
sqxqkLPwepfenuil8YwXhrIeGWngJ9CHPR47lr7wQnos82UYrrcbtOSt0wtw
+1+79yqpEeivdtuDC6W8MLbu7a0ZLQJpHzw4+r2eF57t1M1dO4r9hb5QciSN
Fzr+fTDu4Eyg4bMZ62Vk+KDY5V+eNZ/weXpupdxqCx8M6/gZopNDICcLQ7cE
ZT7YnW45HfiNQGPnx0oktfjgOt3NdpbVBPpkqe109gAf/J39XJbWSCB3q3DS
Uz18/6NNA0ptBJqw3uooZswHz7aN6KRSCPTFxkfQ1JwPNm9+7vkbn69eFyry
Yqz4IJsVifwc6/duWzHbRns+qH5lo+Q4gfXC1p5XyJkPFimcoFTg8z3f7vMX
wyt8cOHRmp3sHIEC7FmsHvjwQZFiEc15rB86Dqc4a27wwZWHK0VHsf4sOyRm
8ITwQWt+X3V+rFcljoyzR8P54IyOdfG/z3duXdzPejeaD5ZK7In49/4evPTg
Q0UsH7y4fnflzL/35S53mbEn8EFd7eAvvpgrLm9bOfQW3+91If4y7u+Ok3/K
7VQ+mKFmW1aDn6fv/PMUSsf32wp4vcP6xuMisbCSzQefLWT+msHx1rhcTNpf
yAf/PNneWjlNoAeuOSdulPJBHsG+TdLYnxi6sc8UVPLB9y+ezS1hfRJyN02c
r8Pjvd4l5Y71qdH97VGtFj4oLrvloy/WoxiPiQmfTj44VrqPJIv1SMwzWm9q
mA96J/xq9sR60+rZS1en88Gh56oPFOuwP7iq+tTzLx+Mun3z88sfBJL0qqEx
Vvlg/ljG5n7s92R8uaJp6/jhppBauUcvCKQceLOj14AfPj4kT+23JhA9sD5Y
2pgfyi48kAgwJ1B6kLSKpTk/PFd447XSKQKp3SoM6rDnhxOpvJZdEOtpyKx8
yw1+ODx77HirAoHmQ47UkUL44YLBiT7vTQQqCI31MQ7nh59sJaLgegLtv6NR
VR/LD/d/ORR7QZBAh8I93KvS+SH3wMuy/jkmkvrSdzY6hx+aKpZ7P8P7Z7rb
WPf0N364em9jdhSDiVJ27lrXX8UPb5w8m7VriIluWySzpjTywz5Jcvgw1gOL
UHG6axs/TMjnlGvHeiDQPlc6N8gPn7iP+VzHejDM4vyxeIwfdvV/slJtxueJ
cldc6CQ/9Ku/by3TwETPTp+4bTDPDwvoLMbG+Hy4erPIRXiNHy4nrZ8pq2Ki
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
d97A4iHWN/8D1uYIKA==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t (s)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(y\\), \\(1\\)]\\), \
\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(y\\), \\(2\\)]\\) (m)\"", 
     TraditionalForm]},
  AxesOrigin->{0, -2.0500000000000003`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\) and \\!\\(TraditionalForm\\`\
\\*SubscriptBox[\\(y\\), \\(2\\)]\\) vs time.\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.677896490048023*^9, 3.67789656169678*^9, 
  3.677898001183412*^9, 3.6802047903637447`*^9, 3.680206335114204*^9, 
  3.680206535926757*^9, 3.680206730020392*^9}]
}, Open  ]],

Cell["Plot trajectories in x, y plane.", "Text",
 CellChangeTimes->{{3.590374538748774*^9, 3.590374558851033*^9}, {
   3.590374637679388*^9, 3.590374639980891*^9}, {3.590374805090843*^9, 
   3.5903748062886887`*^9}, {3.59037487941078*^9, 3.590374902192649*^9}, {
   3.590374959412136*^9, 3.590374962553465*^9}, {3.590375001625821*^9, 
   3.590375005904172*^9}, {3.590375042409362*^9, 3.590375050019693*^9}, {
   3.590375215434483*^9, 3.590375216008314*^9}, 3.590432264390944*^9, {
   3.590432656685926*^9, 3.590432686493533*^9}, {3.590432924287956*^9, 
   3.5904329306528587`*^9}, {3.5904338074881372`*^9, 3.5904338093554773`*^9}, 
   3.61784200477528*^9, {3.617842058038536*^9, 3.6178420715961227`*^9}, {
   3.617909643217525*^9, 3.617909727917803*^9}, {3.6179097603324337`*^9, 
   3.617909761948222*^9}, {3.677893293340366*^9, 3.6778933081451893`*^9}, {
   3.677895118592422*^9, 3.677895133336864*^9}, {3.680203950965901*^9, 
   3.68020396719522*^9}, {3.680204809010923*^9, 3.680204809233059*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "1"], ",", 
        SubscriptBox["y", "1"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "2"], ",", 
        SubscriptBox["y", "2"]}], "}"}]}], "}"}], "/.", "solndp"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x (m)\>\"", ",", "\"\<y (m)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Pendulum trajectory\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.590432853136683*^9, 3.590432913563531*^9}, {
   3.590432953295732*^9, 3.590432961330567*^9}, {3.5904331647800417`*^9, 
   3.5904331787243433`*^9}, 3.5904376401349363`*^9, {3.617842007160571*^9, 
   3.6178420174410887`*^9}, {3.617848440512374*^9, 3.6178484457206507`*^9}, {
   3.647547063782055*^9, 3.647547065428998*^9}, {3.680203785354617*^9, 
   3.6802037871289587`*^9}, {3.68020382135375*^9, 3.6802038303839693`*^9}, {
   3.680203878792656*^9, 3.680203882190269*^9}, {3.680204231982223*^9, 
   3.6802042337962093`*^9}, {3.680204294996169*^9, 3.680204296866314*^9}, {
   3.680204817162805*^9, 3.68020483631383*^9}, {3.68020497559612*^9, 
   3.680204989011259*^9}, {3.680206061978793*^9, 3.680206065008707*^9}, {
   3.680206230468823*^9, 3.680206231762494*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
iZv5kC5/Qz4O6/n/AHg6DAU=
     "]], LineBox[CompressedData["
1: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
/cionF0oN/U0Be45GvxLCSCjgSu25jH7KaBW2j6a/5iMmkN1JMIZ6+B0albk
eCAZ3ZKzK4oYXYd3Isd37cW5Qpnd+e3vdRjhOLnLFf+e6JBt+fvDOrhaGt0/
ja9XMO7vtCVsHQxbKtwe4/tdlUSHLZzWIVCFJqOJ23Pk4tR8n946hHyy+/gU
tzeLbjfif3wdvO8frLn4gIy+mVks6u1ehz/ezGZJ98lIdL2i9sLqGiQ/KuXz
uktGAYfd1x70rIGp5+6EMQcyyqBU13eXroFUteatURsy6hMac77/bg149tp1
e97E/asr23vuyRrwbyguu10hI6VgbeWsi2sworNBGL5IRkyr9jZIdg3yJPh0
iVp4PpR51u7jXYNWk2f1LCfJyID9ieqn4VVQkTCJ3X2MjHhY43xv1qyC54nY
7U2HyYi6d8bcJnsVbqe91jPlIaPHZuYnLXAx1sRKOHRsJxklBrO+vGa5CumE
w3m/tpDRcbZPOmnnV+G01U5p9iUSYmVLKVDnW4VcJLX95288v82EVz79XIGh
dX+eqz9JKHmW+cdYxgokpvgUlH0lIf/iZWfXqBVwObGnYEcCCTl4PekOdFgB
AaVhOiGChI7vbN5gvbYCRhbK37ODSOjpfkvGxJkVOI+Z1mbfISHvIZuDb4VW
oKJ8sp5sSUL534JcfXesAOttzke8RiSkasdFzaMsw+3qiAbyaRI6Jh3feKhr
GW4uqtbJ7CCh7K2/HpyMXYa1rXac7ptE9JuVv60/eBlGXY/uTCESEWsq31y/
5zKIvV8STu8iIoPf1ZmLZssQ92xJLLCOiPZYniMzLi6DZF1XsfYvIhq8+FDN
RX0ZzgzVHn71nohkQ6+SLQ8tw5EpjuK9MUSURn4xPL53GSKPzOg/CyGi/54S
O6t3LoOndscv+TtERD0+WPF2hQyGZsHFJfJE9MC9WLi4ngxx3qeLfxwmIhbF
OexIJRkq0ikRaXuJ6KhguyWtiAw54gtemWsElN33TK/oIxk2TB5GKvQR0J+g
bP6Mt2SYjrTe/7mMgASczcmEODIU6rrTDfB6zPJwXONDGD4eo2j79DYBXfdr
meMIIgPFrcDxgy5er8PTdvU8IoPs9VTGdxkCUprgL2PyJMPlCyW78rgIyKIk
kvvZPTLQ/cbupiwvIdtPO4Xv3yHD+E3ptYddS6h9x9XVYnsyWCnOu2j/XELV
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
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x (m)\"", TraditionalForm], 
    FormBox["\"y (m)\"", TraditionalForm]},
  AxesOrigin->{0, -2.},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox["\"Pendulum trajectory\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.680204842825037*^9, 3.680204989802322*^9, 3.6802060663837976`*^9, 
   3.680206233311592*^9, {3.680206312418373*^9, 3.680206335381691*^9}, {
   3.680206536102563*^9, 3.680206544614811*^9}, {3.6802067302239323`*^9, 
   3.680206733491647*^9}}]
}, Open  ]],

Cell["Animate trajectories in x, y plane.", "Text",
 CellChangeTimes->{{3.590374538748774*^9, 3.590374558851033*^9}, {
   3.590374637679388*^9, 3.590374639980891*^9}, {3.590374805090843*^9, 
   3.5903748062886887`*^9}, {3.59037487941078*^9, 3.590374902192649*^9}, {
   3.590374959412136*^9, 3.590374962553465*^9}, {3.590375001625821*^9, 
   3.590375005904172*^9}, {3.590375042409362*^9, 3.590375050019693*^9}, {
   3.590375215434483*^9, 3.590375216008314*^9}, 3.590432264390944*^9, {
   3.590432656685926*^9, 3.590432686493533*^9}, {3.590432924287956*^9, 
   3.5904329306528587`*^9}, {3.5904338074881372`*^9, 3.5904338093554773`*^9}, 
   3.61784200477528*^9, {3.617842058038536*^9, 3.6178420715961227`*^9}, {
   3.617909643217525*^9, 3.617909727917803*^9}, {3.6179097603324337`*^9, 
   3.617909761948222*^9}, {3.677893293340366*^9, 3.6778933081451893`*^9}, {
   3.677895118592422*^9, 3.677895133336864*^9}, {3.680203950965901*^9, 
   3.68020396719522*^9}, {3.680204319130775*^9, 3.680204320120985*^9}, {
   3.680206258914927*^9, 3.68020625922458*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["x", "1"], ",", 
           SubscriptBox["y", "1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["x", "2"], ",", 
           SubscriptBox["y", "2"]}], "}"}]}], "}"}], "/.", "solndp"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tend"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.5"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (m)\>\"", ",", "\"\<y (m)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Pendulum trajectory\>\""}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"tend", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"AnimationRepetitions", "\[Rule]", "1"}]}], "]"}], " "}]], "Input",\

 CellChangeTimes->{{3.590432853136683*^9, 3.590432913563531*^9}, {
   3.590432953295732*^9, 3.590432961330567*^9}, {3.5904331647800417`*^9, 
   3.5904331787243433`*^9}, 3.5904376401349363`*^9, {3.617842007160571*^9, 
   3.6178420174410887`*^9}, {3.617848440512374*^9, 3.6178484457206507`*^9}, {
   3.647547063782055*^9, 3.647547065428998*^9}, {3.680203785354617*^9, 
   3.6802037871289587`*^9}, {3.68020382135375*^9, 3.6802038303839693`*^9}, {
   3.680203878792656*^9, 3.680203882190269*^9}, {3.680204156391552*^9, 
   3.680204264115505*^9}, 3.68020430786106*^9, {3.680204413088108*^9, 
   3.680204415319215*^9}, {3.68020448671957*^9, 3.680204487885227*^9}, {
   3.680204539307536*^9, 3.680204607336967*^9}, {3.680206269275906*^9, 
   3.680206277002205*^9}, {3.6802063242810707`*^9, 3.6802063442637463`*^9}, {
   3.6802063846866703`*^9, 3.6802063873963327`*^9}, {3.6802065530451593`*^9, 
   3.680206555462544*^9}, {3.680206674363817*^9, 3.680206674673732*^9}, {
   3.680206711443095*^9, 3.6802067403521767`*^9}, {3.6802068188634787`*^9, 
   3.680206934969328*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`tend$$ = 8.75, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`tend$$], 0, 10}}, Typeset`size$$ = {
    450., {189., 196.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`tend$58833$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`tend$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`tend$$, $CellContext`tend$58833$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[
        ReplaceAll[{{
           Subscript[$CellContext`x, 1], 
           Subscript[$CellContext`y, 1]}, {
           Subscript[$CellContext`x, 2], 
           
           Subscript[$CellContext`y, 
            2]}}, $CellContext`solndp], {$CellContext`t, 
         0, $CellContext`tend$$}, PlotRange -> {{-1.5, 1.5}, {-2.5, 0}}, 
        AxesLabel -> {"x (m)", "y (m)"}, PlotLabel -> "Pendulum trajectory"], 
      "Specifications" :> {{$CellContext`tend$$, 0, 10, AnimationRepetitions -> 
         1, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{505., {235., 242.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.680206741890306*^9, {3.680206823363418*^9, 3.680206861213057*^9}, {
   3.680206900567191*^9, 3.680206935728492*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding damping", "Subsection",
 CellChangeTimes->{{3.6161978925218163`*^9, 3.616197894775776*^9}, {
  3.616198226028556*^9, 3.616198228170764*^9}, {3.617840266467514*^9, 
  3.617840268993816*^9}, {3.677893122882002*^9, 3.677893138167502*^9}, {
  3.67789376785868*^9, 3.677893770288597*^9}}],

Cell[TextData[{
 "We add terms proportional to the angular velocities ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "1"], "'"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "2"], "'"}], TraditionalForm]]],
 " with the same proportionality constant \[Alpha]. "
}], "Text",
 CellChangeTimes->{{3.590374538748774*^9, 3.590374558851033*^9}, {
   3.590374637679388*^9, 3.590374639980891*^9}, {3.590374805090843*^9, 
   3.5903748062886887`*^9}, {3.59037487941078*^9, 3.590374902192649*^9}, {
   3.590374959412136*^9, 3.590374962553465*^9}, {3.590375001625821*^9, 
   3.590375005904172*^9}, {3.590375042409362*^9, 3.590375050019693*^9}, {
   3.590375215434483*^9, 3.590375216008314*^9}, 3.590432264390944*^9, {
   3.590432656685926*^9, 3.590432686493533*^9}, {3.590432924287956*^9, 
   3.5904329306528587`*^9}, {3.5904338074881372`*^9, 3.5904338093554773`*^9}, 
   3.61784200477528*^9, {3.617842058038536*^9, 3.6178420715961227`*^9}, {
   3.617909643217525*^9, 3.617909727917803*^9}, {3.6179097603324337`*^9, 
   3.617909761948222*^9}, {3.677893293340366*^9, 3.6778933081451893`*^9}, {
   3.677893779938305*^9, 3.677893838502508*^9}, {3.677893948490706*^9, 
   3.6778941115171556`*^9}, {3.67789414908179*^9, 3.677894198329803*^9}, {
   3.677894730640889*^9, 3.6778947310944977`*^9}, {3.677897070753532*^9, 
   3.677897102750731*^9}}],

Cell[TextData[{
 "Damped dynamical equations:",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.61784155916124*^9, 3.617841615277656*^9}, 3.617841779256301*^9, {
   3.6778966937725563`*^9, 3.677896698284111*^9}, 3.6778971065504932`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ELE\[Theta]oneDamped", "=", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       SubscriptBox["dLdashd\[Theta]", "1"], ",", "t"}], "]"}], "-", 
     SubscriptBox["dLd\[Theta]", "1"], " ", "+", 
     RowBox[{"\[Alpha]", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "'"}], "[", "t", "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.617841781739902*^9, 3.617841861669598*^9}, {
   3.647546987215123*^9, 3.647546997072289*^9}, {3.6778938673752947`*^9, 
   3.677893906302787*^9}, {3.67789394087117*^9, 3.677893942372962*^9}, 
   3.677894697554008*^9, {3.677894734079824*^9, 3.677894734423223*^9}, {
   3.677896768749654*^9, 3.6778967799932127`*^9}, {3.677896856442336*^9, 
   3.677896857896153*^9}, {3.677897238170877*^9, 3.677897241954548*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"0", "\[Equal]", 
  RowBox[{
   RowBox[{"19.6`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], "+", 
   RowBox[{"1.`", " ", "\[Alpha]", " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "1"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"1.`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "2"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
   RowBox[{"2.`", " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"1.`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.677896792691019*^9, 3.677896858744423*^9, {3.677897028906492*^9, 
   3.677897036344763*^9}, 3.6778972433412237`*^9, 3.677898001860497*^9, 
   3.680204790505864*^9, 3.6802063355470753`*^9, 3.680206536238008*^9, 
   3.68020673037003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ELE\[Theta]twoDamped", "=", 
  RowBox[{"0", "\[Equal]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       SubscriptBox["dLdashd\[Theta]", "2"], ",", "t"}], "]"}], "-", 
     SubscriptBox["dLd\[Theta]", "2"], " ", "+", 
     RowBox[{"\[Alpha]", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "'"}], "[", "t", "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.617841781739902*^9, 3.617841861669598*^9}, {
   3.647546987215123*^9, 3.647546997072289*^9}, {3.6778938673752947`*^9, 
   3.677893906302787*^9}, {3.67789394087117*^9, 3.677893942372962*^9}, 
   3.677894697554008*^9, {3.677894734079824*^9, 3.677894734423223*^9}, {
   3.677896768749654*^9, 3.6778967799932127`*^9}, {3.677896856442336*^9, 
   3.677896873558297*^9}, {3.677897247140161*^9, 3.677897249530085*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"0", "\[Equal]", 
  RowBox[{
   RowBox[{"9.8`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}], "-", 
   RowBox[{"1.`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "1"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
   RowBox[{"1.`", " ", "\[Alpha]", " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "2"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"1.`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "1"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"1.`", " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "2"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.677896874906138*^9, 3.6778970515009813`*^9, 
  3.677897251222167*^9, 3.677898002143229*^9, 3.680204790619729*^9, 
  3.68020633575317*^9, 3.6802065363141403`*^9, 3.680206730448471*^9}]
}, Open  ]],

Cell[TextData[{
 "Choose the damping parameter and solve the Euler-Lagrange equation:",
 Cell["", "Input"]
}], "Text",
 CellChangeTimes->{{3.616198261354073*^9, 3.6161982833370743`*^9}, {
   3.616198323664811*^9, 3.6161983305510187`*^9}, {3.616198391222818*^9, 
   3.616198410399736*^9}, {3.616198462204858*^9, 3.616198469516386*^9}, {
   3.616198512005825*^9, 3.616198699756966*^9}, {3.616198748383836*^9, 
   3.6161987749903517`*^9}, 3.616199014487623*^9, {3.616199094899304*^9, 
   3.616199342983852*^9}, {3.6161994968684072`*^9, 3.616199497129517*^9}, {
   3.616717196633493*^9, 3.616717225348754*^9}, {3.616717283323386*^9, 
   3.6167172872436543`*^9}, {3.616717327695451*^9, 3.61671732877814*^9}, {
   3.616717361131879*^9, 3.616717362151969*^9}, 3.616717408037352*^9, {
   3.6170480052339277`*^9, 3.617048017791595*^9}, {3.617048075419153*^9, 
   3.617048103827985*^9}, {3.617048169176038*^9, 3.617048173218102*^9}, {
   3.6170482317031107`*^9, 3.6170482940128317`*^9}, {3.617839636042202*^9, 
   3.617839642714158*^9}, {3.617839752263831*^9, 3.6178397582648497`*^9}, {
   3.617839813601878*^9, 3.617839817414023*^9}, {3.617839891041724*^9, 
   3.617840079521184*^9}, {3.617840112609927*^9, 3.617840156390265*^9}, {
   3.617840204718183*^9, 3.617840257034336*^9}, {3.617840299849633*^9, 
   3.617840345127068*^9}, {3.617841131912697*^9, 3.617841154583645*^9}, {
   3.617841209046907*^9, 3.617841283260479*^9}, {3.617841339049963*^9, 
   3.617841342776486*^9}, {3.617841387983996*^9, 3.617841508865901*^9}, {
   3.61784155916124*^9, 3.617841615277656*^9}, 3.617841779256301*^9, {
   3.617841887508267*^9, 3.617841905706627*^9}, {3.6178419957599697`*^9, 
   3.617841996078866*^9}, {3.6778945976849213`*^9, 3.6778946042669077`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.01"}], ";", " ", 
  RowBox[{"soln", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ELE\[Theta]oneDamped", ",", "ELE\[Theta]twoDamped", ",", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "0", "]"}], "\[Equal]", "0"}], 
       ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "[", "0", "]"}], "\[Equal]", 
        RowBox[{"Pi", "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "1"], "'"}], "[", "0", "]"}], "\[Equal]", 
        "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "'"}], "[", "0", "]"}], "\[Equal]", 
        "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], ",", 
       SubscriptBox["\[Theta]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.617841915424868*^9, 3.617841985682968*^9}, {
   3.617842024969336*^9, 3.617842026953684*^9}, {3.647547017636633*^9, 
   3.6475470554399633`*^9}, {3.677894613819922*^9, 3.6778946406612053`*^9}, {
   3.677894743695488*^9, 3.677894773687883*^9}, {3.677895147218318*^9, 
   3.6778951711211452`*^9}, 3.677895814261367*^9, {3.677897142317133*^9, 
   3.6778972077890177`*^9}, {3.6778972543096313`*^9, 3.677897274460268*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AADAJ+p0xO1t+433D
3cQ/nrlYOkxIcT8/lvq2a77VP9TEyeVSdrQ/UPQI4wkn4D9SqvWHZmPXPzg0
cm9ZVOU/s+fv1n6A3z/3vGVz/fHqP84C2gyrcdE/r0FwQdgX8D/zkNUcFkW8
v07J8gTc7vI/zNhElt8y5b9JHOSKnbj1P/35X0AkcO+/GA6ZlmZS+D/67pZL
mCzvv1IkE95ZJPs/Fyx4zkJZ5b9g2VCrVMb9PyTqhG+gpLS/5ax+nYYtAEAZ
mE2ZWZbbP1B/NwP4kwFAIKO4+DUm5z8lIdIrbeICQLmesmJc5OU/MFVPcvdM
BEDOvo9HzpLUP+nuA5rgsAVACAR5EZngsD8MWJqEzfwGQInk4V5Ayb2/ZVMT
jc9kCEBfQIIeTP/PvygebljVtAlAybE08PHlx78he6tB8CALQFF5Wl5sHsk/
xz0gDGqGDED6U/wnop/RP9fPdpnn0w1AO5h39jE0wj8d9K9Eej0PQF4UJbpX
C7S/53NlWYhHEEBuzazkwUrWv5WgDgED7RBAb7+K/g0t5r9eFqk3iKARQCaZ
grNq9+e/3HO0Tw9IEkDMj7h4SELfv3Uasfag/RJA6ALc4JYqsj/lc0kO4q8T
QJuIxKf7WuU/CrVSByVWFEDiiGpMoertP0o/TY9yChVAA771jCyg7T8/sbj4
wbIVQB2Bttd+AeM/C9a/0sBXFkDikjWPprTAP/JDuDvKChdA/kpEHhMmz7+O
mSGG1bEXQCdqwyx+pdu/RTh8X+tmGEDt9Bb4nZbSv7G+RxoDEBlAcDPYA+qm
nL/0965FyrUZQH6pH6KRgpA/UnoHAJxpGkBUo1x2OluQv2Xk0JtvERtAxJvZ
6dVtsL+Tl4vGTccbQCq4HSWOycm/l/3hYdt5HEBv1SXL3Ljfv1BLqd5qIB1A
N/oe3ANl378k4mHqBNUdQDu0moa4KMe/rWCL16B9HkA0DSVgSNPSPw2SUDXs
Ih9AO+H53qkC6T+IDAciQtYfQHBkF6BZte8/XDcX+Mw+IEDv0fSArBDtPwKN
oyZ+mSBAyXeECxT13z8TvH0Nh/IgQFcCKTgK+LW//l4Q5ZBFIUBzp/1tuDfd
v3emGwSgnyFAeY9lN1/54r/KYd8TsPMhQPOfl+6lyte/q8Eba8VOIkD+8hLS
ujLBv/f6pXoyqCJAOnjUDfGWmL8eqOh6oPsiQODk5MdDHao/0vmjwhNWI0BY
f7cyBNeuP2G/F/uHqiNAhAs91bokw78yFFD6//8jQFawpPBJRNi/aKLbtQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.9824391610453059, 
                    0.9908874632630056}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AADAJ+p0xO1t+433D
3cQ/nrlYOkxIcT8/lvq2a77VP9TEyeVSdrQ/UPQI4wkn4D9SqvWHZmPXPzg0
cm9ZVOU/s+fv1n6A3z/3vGVz/fHqP84C2gyrcdE/r0FwQdgX8D/zkNUcFkW8
v07J8gTc7vI/zNhElt8y5b9JHOSKnbj1P/35X0AkcO+/GA6ZlmZS+D/67pZL
mCzvv1IkE95ZJPs/Fyx4zkJZ5b9g2VCrVMb9PyTqhG+gpLS/5ax+nYYtAEAZ
mE2ZWZbbP1B/NwP4kwFAIKO4+DUm5z8lIdIrbeICQLmesmJc5OU/MFVPcvdM
BEDOvo9HzpLUP+nuA5rgsAVACAR5EZngsD8MWJqEzfwGQInk4V5Ayb2/ZVMT
jc9kCEBfQIIeTP/PvygebljVtAlAybE08PHlx78he6tB8CALQFF5Wl5sHsk/
xz0gDGqGDED6U/wnop/RP9fPdpnn0w1AO5h39jE0wj8d9K9Eej0PQF4UJbpX
C7S/53NlWYhHEEBuzazkwUrWv5WgDgED7RBAb7+K/g0t5r9eFqk3iKARQCaZ
grNq9+e/3HO0Tw9IEkDMj7h4SELfv3Uasfag/RJA6ALc4JYqsj/lc0kO4q8T
QJuIxKf7WuU/CrVSByVWFEDiiGpMoertP0o/TY9yChVAA771jCyg7T8/sbj4
wbIVQB2Bttd+AeM/C9a/0sBXFkDikjWPprTAP/JDuDvKChdA/kpEHhMmz7+O
mSGG1bEXQCdqwyx+pdu/RTh8X+tmGEDt9Bb4nZbSv7G+RxoDEBlAcDPYA+qm
nL/0965FyrUZQH6pH6KRgpA/UnoHAJxpGkBUo1x2OluQv2Xk0JtvERtAxJvZ
6dVtsL+Tl4vGTccbQCq4HSWOycm/l/3hYdt5HEBv1SXL3Ljfv1BLqd5qIB1A
N/oe3ANl378k4mHqBNUdQDu0moa4KMe/rWCL16B9HkA0DSVgSNPSPw2SUDXs
Ih9AO+H53qkC6T+IDAciQtYfQHBkF6BZte8/XDcX+Mw+IEDv0fSArBDtPwKN
oyZ+mSBAyXeECxT13z8TvH0Nh/IgQFcCKTgK+LW//l4Q5ZBFIUBzp/1tuDfd
v3emGwSgnyFAeY9lN1/54r/KYd8TsPMhQPOfl+6lyte/q8Eba8VOIkD+8hLS
ujLBv/f6pXoyqCJAOnjUDfGWmL8eqOh6oPsiQODk5MdDHao/0vmjwhNWI0BY
f7cyBNeuP2G/F/uHqiNAhAs91bokw78yFFD6//8jQFawpPBJRNi/aKLbtQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.9824391610453059, 
                    0.9908874632630056}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5rKkRU+yH5P1t+433D
3cQ/ONb5h0UM9z8/lvq2a77VPza3nSY5tu8/UPQI4wkn4D8WQAoMqYjIPzg0
cm9ZVOU/yz7AFs1T4L/3vGVz/fHqP3IN67yR6ey/r0FwQdgX8D/YlM3jaMvs
v07J8gTc7vI/8gT8zkBm3L9JHOSKnbj1PzupCYOh8bK/GA6ZlmZS+D8Sf2HP
mZ2yP1IkE95ZJPs/JMAq5TMamD9g2VCrVMb9PzlxmHGNR9a/5ax+nYYtAEB7
AEhVGZngv1B/NwP4kwFAUXAhA5C00b8lIdIrbeICQKiMC65BUs0/MFVPcvdM
BEBhTwe9/DfvP+nuA5rgsAVANuw8S6q19T8MWJqEzfwGQMMRSReKRPY/ZVMT
jc9kCEBGhvRXIsbxPygebljVtAlAb2pTp9h64T8he6tB8CALQBGJkxVU4Nu/
xz0gDGqGDEB6EGba+fbwv9fPdpnn0w1AQn1KP+dk9b8d9K9Eej0PQKHZbKoc
8vS/53NlWYhHEEAymAUqoyHuv5WgDgED7RBAJ1xvwB7y0b9eFqk3iKARQPpC
1HuJZs4/3HO0Tw9IEkA3SKgxdencP3Uasfag/RJAgqlNy/mb0D/lc0kO4q8T
QLQylEDZbLa/CrVSByVWFEB/xMMelH+1v0o/TY9yChVAGJvEvbHrwD8/sbj4
wbIVQGGSBnWrm+E/C9a/0sBXFkBQnGl/KVbuP/JDuDvKChdAfGNdhas57j+O
mSGG1bEXQCyU/CjXwOI/RTh8X+tmGEAZszVmAXzGv7G+RxoDEBlAf5ABnNJ7
7r/0965FyrUZQMMCC4mSuvW/UnoHAJxpGkCLA7hAheH3v2Xk0JtvERtAC8F0
Oox89b+Tl4vGTccbQFHbEMsQUuu/l/3hYdt5HEAW0slQ7TSbv1BLqd5qIB1A
4Af0xcfX4D8k4mHqBNUdQJqSkDAeq+g/rWCL16B9HkDSuMPxVL3iPw2SUDXs
Ih9AOhbAsMHUyD+IDAciQtYfQEru4re1hZg/XDcX+Mw+IEBqgPXduG+hPwKN
oyZ+mSBAkMrRmyqx0j8TvH0Nh/IgQKnvDFkMkuQ//l4Q5ZBFIUDS6w8YMyzi
P3emGwSgnyFAYNHTWMfzvj/KYd8TsPMhQG4vk+21I+O/q8Eba8VOIkBAwVzl
c1Pzv/f6pXoyqCJA4LwilRIA978eqOh6oPsiQIDb/TfO8vW/0vmjwhNWI0CO
Z3knNt/vv2G/F/uHqiNARJz7XpVh0r8yFFD6//8jQAZraSl7b+A/gqjVKQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-1.492558720405415, 
                    1.5707963267947445`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5rKkRU+yH5P1t+433D
3cQ/ONb5h0UM9z8/lvq2a77VPza3nSY5tu8/UPQI4wkn4D8WQAoMqYjIPzg0
cm9ZVOU/yz7AFs1T4L/3vGVz/fHqP3IN67yR6ey/r0FwQdgX8D/YlM3jaMvs
v07J8gTc7vI/8gT8zkBm3L9JHOSKnbj1PzupCYOh8bK/GA6ZlmZS+D8Sf2HP
mZ2yP1IkE95ZJPs/JMAq5TMamD9g2VCrVMb9PzlxmHGNR9a/5ax+nYYtAEB7
AEhVGZngv1B/NwP4kwFAUXAhA5C00b8lIdIrbeICQKiMC65BUs0/MFVPcvdM
BEBhTwe9/DfvP+nuA5rgsAVANuw8S6q19T8MWJqEzfwGQMMRSReKRPY/ZVMT
jc9kCEBGhvRXIsbxPygebljVtAlAb2pTp9h64T8he6tB8CALQBGJkxVU4Nu/
xz0gDGqGDEB6EGba+fbwv9fPdpnn0w1AQn1KP+dk9b8d9K9Eej0PQKHZbKoc
8vS/53NlWYhHEEAymAUqoyHuv5WgDgED7RBAJ1xvwB7y0b9eFqk3iKARQPpC
1HuJZs4/3HO0Tw9IEkA3SKgxdencP3Uasfag/RJAgqlNy/mb0D/lc0kO4q8T
QLQylEDZbLa/CrVSByVWFEB/xMMelH+1v0o/TY9yChVAGJvEvbHrwD8/sbj4
wbIVQGGSBnWrm+E/C9a/0sBXFkBQnGl/KVbuP/JDuDvKChdAfGNdhas57j+O
mSGG1bEXQCyU/CjXwOI/RTh8X+tmGEAZszVmAXzGv7G+RxoDEBlAf5ABnNJ7
7r/0965FyrUZQMMCC4mSuvW/UnoHAJxpGkCLA7hAheH3v2Xk0JtvERtAC8F0
Oox89b+Tl4vGTccbQFHbEMsQUuu/l/3hYdt5HEAW0slQ7TSbv1BLqd5qIB1A
4Af0xcfX4D8k4mHqBNUdQJqSkDAeq+g/rWCL16B9HkDSuMPxVL3iPw2SUDXs
Ih9AOhbAsMHUyD+IDAciQtYfQEru4re1hZg/XDcX+Mw+IEBqgPXduG+hPwKN
oyZ+mSBAkMrRmyqx0j8TvH0Nh/IgQKnvDFkMkuQ//l4Q5ZBFIUDS6w8YMyzi
P3emGwSgnyFAYNHTWMfzvj/KYd8TsPMhQG4vk+21I+O/q8Eba8VOIkBAwVzl
c1Pzv/f6pXoyqCJA4LwilRIA978eqOh6oPsiQIDb/TfO8vW/0vmjwhNWI0CO
Z3knNt/vv2G/F/uHqiNARJz7XpVh0r8yFFD6//8jQAZraSl7b+A/gqjVKQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-1.492558720405415, 
                    1.5707963267947445`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.677894618698415*^9, 3.6778946421673822`*^9}, {
   3.677894678014619*^9, 3.677894705045125*^9}, {3.6778947376326017`*^9, 
   3.6778947749316*^9}, {3.6778951483721457`*^9, 3.677895171691258*^9}, 
   3.6778953647035513`*^9, 3.677895697547789*^9, 3.677895815149887*^9, 
   3.677897209811154*^9, {3.677897262061042*^9, 3.6778972753507557`*^9}, 
   3.677898002244162*^9, 3.680204790741432*^9, 3.680206335830657*^9, 
   3.680206536376686*^9, 3.680206730505394*^9}]
}, Open  ]],

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "2"], TraditionalForm]]],
 " coordinates vs time. Include a title for the plot and axes labels with \
units."
}], "Text",
 CellChangeTimes->{{3.590374538748774*^9, 3.590374558851033*^9}, {
   3.590374637679388*^9, 3.590374639980891*^9}, {3.590374805090843*^9, 
   3.5903748062886887`*^9}, {3.59037487941078*^9, 3.590374902192649*^9}, {
   3.590374959412136*^9, 3.590374962553465*^9}, {3.590375001625821*^9, 
   3.590375005904172*^9}, {3.590375042409362*^9, 3.590375050019693*^9}, {
   3.590375215434483*^9, 3.590375216008314*^9}, 3.590432264390944*^9, {
   3.590432656685926*^9, 3.590432686493533*^9}, {3.590432924287956*^9, 
   3.5904329306528587`*^9}, {3.5904338074881372`*^9, 
   3.5904338093554773`*^9}, {3.617909996509025*^9, 3.6179099986272573`*^9}, {
   3.617910042690895*^9, 3.6179100677687263`*^9}, {3.647555916106997*^9, 
   3.647555924015297*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["y", "2"]}], "}"}], "/.", "solndp"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<t (s)\>\"", ",", 
       "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(y\), \(1\)]\), \
\!\(TraditionalForm\`\*SubscriptBox[\(y\), \(2\)]\) (m)\>\""}], "}"}]}], ",", 
    
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<\!\(\*SubscriptBox[\(y\), \(1\)]\) and \
\!\(TraditionalForm\`\*SubscriptBox[\(y\), \(2\)]\) vs time.\>\""}]}], "]"}], 
  "  "}]], "Input",
 CellChangeTimes->{{3.590432853136683*^9, 3.590432913563531*^9}, {
   3.590432953295732*^9, 3.590432961330567*^9}, {3.5904331647800417`*^9, 
   3.5904331787243433`*^9}, 3.5904376401349363`*^9, {3.617847888797811*^9, 
   3.6178479087570887`*^9}, {3.6178483651865587`*^9, 3.617848365392972*^9}, {
   3.617908109326754*^9, 3.6179081099825373`*^9}, {3.61790923661961*^9, 
   3.617909241250787*^9}, {3.617909283553341*^9, 3.617909326167322*^9}, 
   3.617910074466002*^9, 3.617920496026587*^9, {3.647555935388624*^9, 
   3.647555971032783*^9}, 3.6778936370615263`*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwcmwk0lN8bx+37NgxJEkqEChXRcm+UUpKllCzZKnvKXlSWikIqUimV/NBi
KUsIF0n2JbKLsc1gZl6y7//b3zmO8znve+/73Ocu3+8z85Kzv2J6kY2FhYWb
h4Xl399XN+251B0fHGT5/88E0q+AVnObnoNvn9bwD4HSQ3aHTmx6D4j6T//n
v49LGGOXM0H3OZHVf/zSZMunv+1fAG0ofe4fJz/xWZh8kw0Ckvym/9/+d6X+
pHMO4BDdO/GP89ZJxk5o5ALl5bSxf1xi4UwhlnJBt4nP4D/+mVC4g6jIAz++
a3b946Ze/kBm1FfwjOTV8I87NllXM8zzQRr/c/SPKXYZEoxNBWD50Mqnfzz2
bs2BTisAIpZtcf+Pd9j48/jnQsDLrx3wj5cUk1bHrn8D0f+Jmf9jDpepE2N6
RUD+8DaVfyzw6fDzUYFi0BUoMLeKWZwZN0L7XQw03qzP/8cyatRdtMQScNbH
0+0fb722N5h6GYFUDwbpH0t2Hb7sJVkK5I3lU1YwS99gCE4FlgLto0Zb/7Gs
9NOca5RS4GZ35uEy5i3FBy3/HikDU2e/9i5hVrKhsl77UAa6P9wR/Mfb1x6m
TQqVAwN+C6lFzBpv9p666lUOGsT11+Yxax6izEy0l4Mte5rz5jDrDES89Nz/
HWh9oOjMYj4YqqE38eY7uJCTHTaNWXdL9+gVzgpgTK+O/Iv56I/QGMK5Auz9
3nt8ArPhJVWtKw0V4MxgQy4DszH3716mxg+wGvTo+xjm02lBYR7xP8C+uxuc
qZjPGWxVYS79AAmiJi8GMVuNNTS721aCGy8Igz7Mdg/8/BkVlaCryM+5C/Ml
VdlN7tt+gsAv4qOtmF3qq37Qo34CjlvhXxswe3hcdXP7+xOQTXnKf2K+Jiwl
RjevAqWHVaYRZt+s8gLXb1Xg674qra+Yb5i42o5vqgbPFTq80zGvhmqu74us
BqYqv5+9xXw7j/XXr4VqsKSUciQWM9to3f3KSzVgin/H6TuYwzY80ytsqQHK
ytPPvTFzGTksp8NaYHqfRrPDHHF7R+7b9Fqwt2ur8Ml/6yN7wT1Oqg60bslr
24M5erhia8S9OrCmo8cpjVlEMqYvcLoO+Ci1W66tEujxcctnnnb1wLX2wdM+
zOSgrSaODfU4v/vdijDHZ07yntvXABqLd0XHYZYaKCo/kdYAjv9pSHXB/JIc
fgOINwKXTwo2+zDLHDXbvSukEeg8Sz3FjflNgAxjK9EIvhzMFWtYIRCpbdpU
cEcTQJqaOg8xm145v/OeYxOo1FA+cRxzLE8pP2tCE1gw21W5ukyg328VaNeb
m0Ar6wb5T5gl9j2omOZuBsGZJnUmmM+1TrzxONgMLrZeViKWCNTFVWRh/7EZ
XOL8fkoI84Y3cpo9lGZQL5H3MXoRz7/2PVFzyV9ANeRjJzvmV7/ozEajX6CH
RZTdfYFAf1xNaw3u/ALVuj/0qucJtIkzP/X7t1/AiMXi/TrMtokbww78/QWW
dltpnJ0j0GATbb/6hRYQ932TxX8zeL+4GK3/GNcCyizL3n6exuuJPWdmS10L
+C08YPdhikCpL9f/SmRrBV538mH0XwLR9tzKkNRuBYfjLjRbThJoW+PQ/cdX
WgHy6H9EmsDrz+n4ZYGUVrCDX20snUkg+gtxWRax38Cmoy7qyTjef7tvLAcY
/AbJ0cnqnaN4fdb3d0zd+g1uahyTXqUSKOuSfq573m+gq8y2l2WEQJNrHx9R
6b+B5q9G095BvF+fkzzsNrcBR3XHjU8oBPLW8DvebdEGDi8LKm/qI9Csoy57
Y2Ub+Mn0z83sJJDWamrfsZU2kE1Lz89oI5B/vGBR+a52EKdhxxnQQqBCNa9n
+13awUYD3gj+JnyeVXd4571pB1oiR4Qc6gi03+GgiVp7O3hDyt0fWEWgm8vv
tn8Q7ADxun+fmVUQiGXnlZFX1zuAxY84uOMbgQ5VtZav+9wB3rkqj2/LI1CI
nc7rR9QOIK/4Paw1i0DfF1/f4JfpBI4j1RPbPuLzMpbz3J3TncD8c8e8wn8E
OrLddffa/U5QcKXQuCKRQHcrm0QCyjqB0RaJBJZnBOJdSKh229EFrtbTbA9F
EGjvvc7rx+26wKc1j5iqYAI5ia9TVYrtAnOr71TGAwhUqf44enChC/yere+e
dsL5QY2gTLUbFLXnWf6+QCAFI8HJxAvdoFmWonHYHO9fl3Cz8z+6QWt+g0j5
IQLlzP/g2DvfDZY28fjVaeL1c5c9T1ylB4S0cpGsVPD59+6mZHNMDxB9wWPL
JYbz0ePde9SqF1xr+c4f0cNEai5fohUe9gJu3/y8b/VMdGGeAOzlvWCWLhN1
o4SJSsiuSSWKf4DpwvajuYlMdOOk3eU9U3/A2q5Bo9LzmPtS/ElH+gEwbs2q
rWKgxylHTG7b9IOYYNli2zwG+uA+tI3w6weRpfkWQskM1LUk1133oR8EnlMQ
7rrFQHslXx0IF6GA81G+sao6DGTct09ibhsFGKvu9Q7exkBOKV3Mi3oUsHRk
WU99PQPF75Z8o+dLAcc2UnsLFuho1vgJ21o3BRyQtl9eQXQkJKnR7T5DAdOl
ZfNFX+hoa19Tdo/QAKhpCI5b+o+OzrgLXSw8NACaDhX6sUXTkdvu9APbLAdA
hmqbUWMIHYUtnZB45j0ABu9mTG3xp6OciIifPqkD4AEjId7TkY7qjJXeDJUO
AMajP+NOlnQ0uO6nv1kXbq8UVso0paPFPxdNyqcGgNC5wQy2E3QkmsKhrC44
CMwGs6T/06MjZfd3bG+2DoKRNm3Qtp+OdHfrdgvBQeD1wF7mqSYdnV/qzw6y
GAQLip7xQ2p0dLX8ViT92iBoLHh2oUyFjuZJsendDwZBzotTGYcU6eimXVpD
TfIgIPNQ6g020xHn5yKioHgQyPFakjs30VEkS7PI+7ZBkML6opApTUdixsPq
z4hBMMXT1hshRUcvXi+Y3uMZAnYjqsHvJelIjhD09pUbAm6sI9GG6+go7aB8
3EWdIWC1t7rzqgQd7YzWzDttNgS+uh+QkcSc13u8Xc9tCIxK2rIfxHxg+4V5
jTtDYHOZsPQA5opAr/XyiUNAu6yRyob7P1F3T4f0dQiYyuS3JK6no18bXlqy
NA2Bva8P7MvZQEcWrlmBBG0I9GSvOB2SoaP+wopXf1iHQU50QPxhOTq6zNdZ
Ui81DJwsyia/baEjpgWjr2jXMLjyWT72PyU68nnPyvrJcBi8JKPINVU6Wp4X
l0+4OAxWDyn3/FSno9Bjynr3bw6DEbVFn2Wcb75nBx0D4ocBeG14KAHPh6TW
5ZSz1cPg/qnceiEDOnp998ZP/YFh8N+i+ea+U3g9tT2k7VkaBt9YQltFztLR
bp98ZfL2EeAvosz68BIdfauoO8GuPwKa2njK2jzw/JIpbn9tRkCQkMQlXz86
Ms7mzWyKGQF3fny4nx1BR+1sMk3o/QjYPegvYPiEjmxMNSYzykdA4I12f41X
eH1Ont8VNT0CMvYZ1Pz5TEfhOz99NThHBZTI4fVuf+gIfTQqLd9EA6Z5SdUs
ugykv2RP+byXBjwOGMZqn2KguuN+bG9NaKBjg9zeOCu8/0ZfH74VSgNfPfVm
3/sx0KziZNU+Kg2E84WVLWUw0I7kJ805GaPAwXDnho5NTER+pjZXWj0K8jPV
PinsZKKlB/XS9UOjYODjz3Cng0xU5cXtNCw1Bhgy1tmlVkxkr3djVfzeGGj4
ICFs84yJjmlJbpFPGgNePG7rFlKYaKdKrsGO4jFwcLO52pVcJloWJWL1p8ZA
Jjf7Ul8zE8UN2Kv4XRgHR3OlXIJ4CBTYtmYcen0cZDp91H4hTiD7mpe+D+PG
ge0BhU8B8gTa8aWtLLV2HIg97Gn23of9RooXNXtkHDBv6H+/fxTrxXMRwVJW
OlBQT245a0agquDj5zq06MBxY+d6ARcCZfhQg4ZM6aAhY18Fw5tAcc5h7ybc
6UBWV873xi38PJMSJk8yHXTLL0rFPCHQsSOWZHFEB5RUpyzSKwLt1J7Xluui
A5PQmEe7Uwi0LKtxR1uEAW71NaSbfSXQALnxwxEVBtjDczn9OCJQNY9bk4k+
A/RI1t3uqMR6uswza23HAG51ex4t1hPo6cR/G1wCGWCbZrZBRise/5DuId94
BlBZSJCY7CKQQ0ffpZAvDHCDtOJY2k+g43WBkdH1DKB9jyVpPdZjtdL1X17Q
GICz/KTO4hj2Nzl57SnsTHC2/NLzCwSBVlLNVr7IMMGXa6zbjmL/MJQwIY+0
mcCuwtI4Y5ZANQ+jjtWeZgISR5TXY+xfskKVPdqvMMERz9a/E9j/PPX7+WTw
PhNsCRrc9hP7q0BXxwLiPybouaZ4RRT7QYcLrH1LpUzQ1Soq1oT5uFkiB08P
E9yrv3jhXz2gdnSfMnmOCeZU/Z7Gr/3zXx2nZEUJUORy628C9nfLO3x8VLcT
INtxJJkb9z8gL5qw9xgBpkzjfrdjf1UtkVl62IEA53uMknixf8riMxwxvkkA
Uw1hmRfYHz1dpfFbPyeA63Vf47vY7wT+vaPunEOAwnSdPbXY3ziMyJ/1aSQA
3ezTt4s4X8e7UGDwGAHOmBtXmuJ8Sl7e0VzJNgGivtxTfoj9CT9ledBQBPOS
Sda6X9hvn6+d/bVxAugZ7RQdrSbQsJGTdN/eCbBgVCVigeebXOm25eaRCTD/
fLwsLR3r74GrqhtNJ4CvT93xk++wf1W5vt/SdQJsffrZNSKSQI1JNw8v+k2A
WB/qrg23cf/rQw2fh02AwOCDmrPXsL/kibRqfzUBxGh9fIFY/x/cinH0/TAB
tsX7U2Xx+i6cjXUT/zoBJFQYEuxaBFo3/CrQrGkC1NrlxHmRCaRvlRT2t2cC
9GqdElxmxX6sJSXy0egE+OB5ansek4l+lWW+bGSbBJe8W8/n/GAiVu2cZA/h
SeAny9g0lYn9QVb+J0HpSSDxoo/b4jkTRSWWFZ3YMwlsn0brPHJmoiLxyoqx
Q5PgZmXd7QvGTDQWWVMXYTQJdnI3MQ018f6/0dLz8/IkSDw+wH97jYH8/rYP
XfKeBMf8Yya/DzBQinMPnTN4EuxQ9rm1+QcDsZ8bXtZ7MQnsJi64a95joJLd
c9Kldbh/U5+P9SwMxPi4tOVC5ySoW7mrINRLR9KbWbavDk8CUe9jYtfz6SiA
xHtg/9okKNlntkR1w+czU8o6X/0vWF/EwlNXN44+pB58lfX0L8jI103d5zmG
4qXubnxrOwX63N7pnHtERbODDalGHlOgyvfDbI8tFZ1OX6exfGMKWJjeAZVq
VCQK3+ufjZ8CxcSS8EjzCIq8WHdFsGEKeChUzG2QGkFjO8QXC7unQBvrsuV9
xjAymLcOcxqdAr+K3x+IKRtGXA+IZ985poE791d1b9dhdDtLtDxg3zSQcxB1
4f45hP4EWBoqGkyDn7U1w4mvh9ABveS2VvNpcPkcW92o/xBa/L1nfOe1aXCP
y+XIu+1DyHvpHHkkbRqkjnZq9r4eRL8q3iY+yZsGIOBltcHNQaQePaZ0qGIa
VG7YEOhvPYiYsoEHXvZNg9683E1yMoPISf/1JVOJGWBuVb2jKG0AVQrTJtY2
z4D/9nNZnI0aQAqdajfS1WfAh/DXUkXXBtCAa/lDnpMzgAnriofAAIJ7+KXy
zs+A0ymsae8VB9DrVbNkB6cZIO8av19HZABZPRrOLwmdATIXPWlokIIKz+/Q
c3s0A3aV9CfnNlDQ+i1+9etfz4Byg0Nn/QspqC2PZ8C7cAY8WM7zvRhLQbtv
m7jJV82Afe/G98aEUNATgxezjb9nwFmS5MvwqxRk3KPCrzI5A0Sv6T8aMKGg
jP+84zpWcX+7PPYc1qMgwSvFm+4KzAJdPvPXXnsoyG0v14ddUrOgQczhh6cS
BdWwntpNUZwFDwa7n+6TpiCl2viS6D2zYClj3XKLCAXdi+0/tl9vFizaZ7Vp
c1HQiPW2llHjWRDkF8/qvtyPDites463mQVXA9RN3Kf6UdJEIfWw2yxI4w14
ojPej1gL2a/9DZgFt/0EY1oH+5FtqOHy63uz4OhByLOvtx+VGMbdPRk3C5QF
t311b+9HGyX+iCwlzYKdbekmbr/6UWDf1oS0rFlQO3znrmZDP+pKu6JgXjIL
snfordbW9CPta/mZ7HWzoM30tKVqVT9qWttnc7VzFjw5833eurIfXYpCAn0j
s+DYJI+96Y9+tCyl981wehYoCBps58X8OK3SuZB1DnQ9Hh4LxqykeVxSSXgO
iLz1UyjC7Uu+11fGSc+BN9eq7L7i/k+bmPiwK8+B+oOVMl61/WjsT+vmq1pz
IOmL328mju+227lffw7j/sb/zm9r6UcSi923DU3ngPBV49nNHf3o070LOwsv
zAF7l+e7e/D49cQHexXd58ChfV/JpkN4fEmXIuOuzwGm+OXJMJw/T7UxHfbw
ORDmqLTJG+eXq8R91DNuDgw+UKbL4Py/PDEZ/ydpDpwR134TxklBGp3e+oZZ
c6DD/X1gsjAFVV2any4ongNHC48WBUlR0HTwmklcxxzwekraaaFBQfeFQ1nY
R+aA69jFPAtAQbKvuDI9p+aAxAEhA5GTFHQyX1DAUGgeiPtm0BNcKGjoyKPC
gg3zIK5YVOrKdQq63kJ2Vtw2D0w4rz2Yvk9BKcwNlWyH58EPl2Z50QwKWt2i
fLsgYB7szInoDFimoNgv6TsU782DtOV2oTLSAFKG6r2xsfPg2GrCo894/5hb
7tXxzJwHXIehW8SZAZT5SH966/A8YBpakoj8AaS/qSYp9i9+3guHu5YtA6jn
00kTNpYFIHhPEl5iDiCeqtMZvVILgHtP1SnjrYPIdtXeKdZ4AeQnXLI0eDWI
Zh+MSLDZLICiG1c+Xy8aRJHrXX5ccV0AYQlulP09g6hg91X5E3cXgG2y80m3
jUNI1PVWD2vRAjjYV60MU4bQ9/YE4yuKi8Bsi5Jre+MwirU/Mz2zaxG8rjL3
9poeRpcYQs8C4SL4yamwx2P9COJjD+mLsFgEG098LvR1HEHGO5w8kh8sAv38
7adjVkfQn7DdkZ3EIrg5TR5+AGkoS5i503Z5Eby8FHu125mGQl6ktozwLAFp
7hfQ6gkNKWRJbZiWWwImT07+HBihIbdulg9Cp5fA06zc208ejqJF9fqfevlL
QIQ5TfMbHEN1RXddayqWQJJWs1aV4DhKPAqFTZqXwPVkLuVFrXF0yDrb3GZs
CaC3i5rUB+MoPPz5sL/0MihJ/c9QDNcL58XMItaUlkGaXgjnGws6Uk0U2H53
zzJ4EpO4tTGYjhqzb3k/MVoGTZGbDhFNdCTRd5E94/Yy+GYNHeScGYjmvCl1
d9QyeN9mb5QRxUCF0x3Hvz1fBtmVV9QiPzOQNZ/h46ovyyCUa+2b0Bz233Gc
mqfQMhjfd+zoK0kmYpFFnb9rl0Gwza1PxtpMlLxHQ25waBlIB22hLvoxkW/p
eIXz5DK4bKre0BPHREdP/Oc0sbIM/hNn7Sr4gvXYVjJrRWIF0MSfTYNRrNfj
zWZhm1ewn1mf285GoGjfB3N8aiuA/8hZ+WMbCKQeuXpQ0mAFrEmY8T87RiAN
52XHdPMVkM8aZr3pAoF26y/e13VcAZnPqCpq2C/v2Tyf1X51BdxvHxasvEcg
TZbZNrdbK8ALBrf1PifQ3t6pZdaoFZC0UfWxzwcCaRdOyse/WAFjZU23IgsI
pBNPHFNNWwFpk/mcm38SaL83w6MsdwVcuziSpNNCoIMm47Hm31fAwVDz3t+9
BAI7RgvHm1ZA00O2HfPYv0F+av/tPyvgRePB8f+Y2G/Rhrgk6Csg4spGjSHs
Bw//GFD9uICfdy6oMR/72SNJ/aaQexWc9gbblLG/1L/1x/83eRXoa8kqAexH
j1n1JLrIrwIl3ify/z4fP67dVbG2cxUMmv+puor5hETHWOyBVcDy5qvoa9ze
cOq3iPKJVUCzu7LjIfanRk0tmujcKrA/33T1OPbTxunNVqcvrQJhoTjDTuxH
Te43hox6rYLO9tj9h7E/N71cn3YzeBU4H3T+/mSAQKcP1zaIPVwFP1OeWTdh
/2kuVz2d9nIVVAdK3WBrItDZ1Uqpgx9WwUAHKUDjB4HOdVfAlq+r4O5s7ksn
nM/z+eWXnH6sgrO124XTP2H/GFcaufJrFRwrtOzifk0g62slXx73rwKLYy4j
t2MIZKtauFq0tArQa4NMuieud3jzt5jyrgEenYG7zAv//HLucarEGlhoWWlR
NSLQpTefn5I01sAmjjinG0oEciO/33HJaQ2Mc8WUyP5mIo/JlNNLPmuAIZj8
9GcJE11pSL4eE7oG4mqlw/pTmeha+JvKwkR8v/UP3mB/JvJbjrcR/r0GPEYE
v8mRmci/My4seWAN+NfOi64tMND1vCcftCfWwKrZ1W+BfQx0MP/o0mdOFqh6
dcXb4z0DHbqmd7RHlgVO8PDNFmsz0NERnT61syywvnc53NOYji61tNLvWbPA
O2bCKp9301FYqcfiHwcWaLJscGpQko7KXiSJR3mywE1yaqIqlHG07xSf4WgE
CzyXktCTeXUc7czvzH9bxAKD/wo058WNIaP/vCrny1kgC5fAwYrrY8jtsWDr
qWp8feigy/KFMfTe7RCx8psFdk6FRS0qj6HNcu8VzhMs0Ib26vGD76No3X3/
x6LyrPB0QfKTDtZRpOkn+sZZiRXy/peTsWGchk47fkov3cEKL5Qe7yxqpaFH
B/urPPaxQoWH/poK72mIf+roWs1pVpjLxb23z5yGlPspAvKWrLCF/aiqox4N
Hau/IRVgxwrLXq/y2KjR0J3UzD2KHqxQbd740Dd+GlqzXOcWeo8Vynp+5rxY
RUUyBp8DuqJY4alG6d9d+VS0X/PEPfVYVjjyeXpT13sqChC5ldT3hhWqvP2R
ezOKip6tSGZppmL+MJSudJuK8sa+FEels0LOhLAbF72oaKpipGNfIStUXSoL
emOJ/fKX2yOPS1nhnc63fO+MqUjttdT0aCUr3PL2xMZD+lRkFJnDeqieFR7Y
fbUycD8VuQcYCT9rYYURio/5z+2ioshLNGmikxVWR9aOtCpT0QezEGX9flZo
9yxLf0aeiqqg9N5XI6yw3Xyv0LcNVETdnndkms4K104+JiuJU5F8kPtFlSlW
qHd5m8F5YSqyqttyx36BFWpdVI9X46Oipxt6kp+vscJYnvBnnzipqMnlSUUT
Jxvs777d3chKRXyFx4e4Bdig2eHogQSsV0d42TiAKBsMHFzdLLo8gm6fK9js
K8kGvePbeHcvjqDCVE+9dBk2aDkSMMm2MIKmZxUdhrawwc0uhiq350fQDv2+
kA0qbHCG4rz4CbNT3NMkU3U2qPb9ZOx9fP+7oZPlEVpsMPnEblmpJayPuzgH
Sg+wweOVOXlWKyNIMrSIdV6PDVpQnO3MWKjI9JeX3M7jbLByr4TUGjvOl5zK
oUvG+Hk189W2PFRU6Tlg+8qcDe61dTUIEKQiltLnt1ut2GDHzk4bAzEq0hE2
ecPvwAbDLn8sbl5PRT42PKW6zmyQWtbIKSZHRVnpqC/gChsMdwspF9xGRWPL
vmtZPrj/Zw1O5epUZJMwfHBTCBv8c2hz8/kjeH2MvbQxD2eD0fcj2AGe7xbt
0zejotngFz6jlV68Ho51lBcvvWCD0n92MU/4UFGI4vVejbdscGBq+bJUKBUV
+aqvOKeywVi2gvdJuB5TF3+zvyMbX89mnerNoiI3x7NWwoVs8OTNdUcfllFR
SrZQoH4pG3zQeXt29hcVSZkGfcupY4NvbTlGB+eoiOPheZ1Hw2wwBJUTLMdp
6OAf0vmqcTx/lGr1XbY05L+9OmBtkg2+4V524/OjIUatVoH7Kht8EfHt0fMU
GmrjEd97fB07vFZtfr5cYBSJnKs7G7yRHX7Mf+2QojiKjqeG+uVvZoeaJzsH
efRGETryN2+rGjtMSS1f2n5jFKWFNO5hN2CH+p0UOdmJUXRjOWJX0XV2eFkk
aeujoTHU4O0Qez2YHeoOuzQSnONIlrF/Zm84O8yp6VpRUxxHFb1EXm4cOxS4
92dKwXkcCaAzOplZ7DD6xDuO0NFxZKO1M8H9KzsccXeXesVDR1mZPMsqJexQ
bSZhO1CkozNvvhWn1bLDtNTDHcv2dJQYLHcoaYQd3hrLTPrWQkcTC4tvbRns
sPPiKTM3Jh3pXmtl2zTNDj9JKVJv8jAQ1f5eRQIrB1QP8I/7ocNAaocZR+Ok
OSBLVLlJTzwDhRRVpplt5oCx3ZLbXqQzUOvuN7yiyhywqc9vuKScgfwVzGqj
tThgvnbcff1xBirjKjAKN+WAASRXjoQ9TES+9ThT34IDypixRHXpM9GlOVcR
TlsOeL/l4Kf4s0zER5P5FezOAa8aNJ2Ox37HynZeA3pzwJqyz9v77zJRRkfz
k9XrHFCO1WNPNvY/ptVhZ26Ec0CiZ4M0B/Y/yYds8rQfckAdFzbWcMREswVa
6+bjOGCUhfbGpDomSvgw1uH9jgNulkq1TB5moqEHxlYeJRzwRubPp6pi2M9w
KBer/uCAIYm7TDI2Eig8kF1mvJYDnhXfurFbkUDb3fP6LndywHL+2JGD+wh0
e/gh3NrPATcUbte4fphAv6yd3w6NcEDzcpKq80kC+RpJO9hNc8CnQ3/nnG0I
VFU5833TEgcs/gNCb10ikBRo3PKHlRPuuXBAzdiDQCU7Q0bOC3NCAarVu21B
BOIm0ZxPK3PCQ5HRxrR4As3eszryWo0Tis/nc7x8RaCR1SbZMU1O+NDt+uLG
dwSqpBe039LjhIkbR1/FpBMoz2FHdo0BJyxQKVEN/UKglK6kaHFjTnj3mVTp
0a8Eulv14MhHK04YRho3OV6K4wUscrP2nPD02PfRiAqs/3ney9CZE3Ir3ypI
rML+Kdk6u82HE96xf9l9HPsTzQ2/ouUCOeGB87Phg9i/bX2s7+IWwglHbTK3
nG4nENftnXJsDznhrz03HyHs52Zn3y0bxnHCs9wt97714/jdJTviEzih74m7
Xx8N4vgtWR9uT+OEDUKC9Q00HP8vHxf/DE74/YDfB81xHL/B2JHvOZzwxs2h
rOsMHL9Wy/K5Mk7IZUGbfDaJ48842vHuJyc8fGJ8xWsKx69QlM2s54Slh3Xa
VGewv3qp9lC7lRM+i7fv/I79mr7Yfy5hXZwwLVjXXnsej+f+ev3GfpxPy4NV
Udg/bmWNlpOi4vZSPhfKsN+T8GdbcWRwQqOPU/6tS3h8hG9H5hSOp4hq/3MZ
j+/iePbiAidsoTc7vcB+caTnwsMjLFzwkeHXlpOrBGoza3WJ4eKC56DpGAVz
Zc0x/W4BLljaojtp/u/9kUPFclvFuCDtxkGVf9/3p+Srr3iu54JVh0HnEOan
O1M6vm3iguS7X3T+vY9xN0Uqh2srF5STSI1a+Pf+wMaHD01UueC9v4tC7f/e
R4hld32pwQXV/MIXn2I25/fXp+7lgjJbzR5oY9YPoctpAC74bjR7qQTHo7lg
uxJ4hAu+6Q27o4h5q+fvjp8ncDxVhvZeeDwSVIMcUVMuSFrnUpuEx8tlU/LQ
+hwXLNI9sJiL8zHbquGaZsMFvVtNldJxvkZOpOpPOXJBhe1RD8NxPtvKN8gf
dOWCojknXY7hfFdqx6yEX8Xx27yaouP5yMvi6Gzx44Lyzqcv++L5SlEMyJG5
yQXTKnXZhvF83hW3d825zwX11GtSrmF/7RvZpr8WwwVTpnXUHjP/fV9+Qv54
PBcMt+ntj6fj8U3u6ux7xwUj/+6qNsfrSdMpLUf5Axc8qnYlWgTXE1v7pGN8
srjgpohdTz/j9cdZz3mUv5gLpu7yffPhD4EE3F869H7ngt86RrdUdxOILLjr
dmYNF9TYnbuuroNAW07aFph1cME14R3cwb9w/VFfqPJyigvuKBlVz8H7x9Dd
5JjHIhd0Tzy0i70M+31BmiNk5YbmVlpPdIqx3z4pnjgkxA391XvKHXMJFFJ/
RWS7MjeMEX55Pj+ZQPfdubavqXFD9vWiqZZvCPRY8JVBsxY3VDP+HEFPIFDS
yZoQnyPccOK664auxwQqq98yU2zLDYvPvhBcukUglobOTqN4bqgXLnln4zkC
8Xh4zsomckOeV73qbGYEEhHiFptK5oY1vLvcBvF5JWu02zD+CzdUH2JsfKOH
66+G6JK+em6oVMP6ffNOnE8Phe7Prdzw7Q6VNUFlXP8IFc2FdnPDAxWvgle3
EMjGaFRNaZQbbnY7Hj8nRaCbDXrvPDl4oObDjPQr3Hj+PLqQLj8P5E6xefP5
Xz0qdLWHLMoD3d6+K+VYZaJXRoniBZt4IHRKBkPTuH5tmL/Huo8H3k4V+5I1
yEQVHg+TWw7xwFfzZ32S+5ioTmhr2X/HcPvKXo7cbibqMTJbNDDngZv2P3LT
aMXnO3NUQtqaBx7I36+Z1MRE9Ojbu5gOPFBMXi9jdz0TLTWkuz2+ygPJJSeD
f1YykUyzXcJhfx4oearaoeM7E+m2iNfM3uSB97a+OixShvXqd/V82h0emOV8
MsgT1zv324MULSN5IJfhVsfFb1ifOtXNBZ/wwCPlbScyC5iouXs4DD3ngXrX
2ENjvjLRdO/z7KtveCAp55vZ61wmkuw/ObA5lQdOR02x9WYz0f4BVlJbOg9c
UCI1Hcd6ZjuUC8JzeKDUgu/0aBYThY04e+h844EjUlzvvmUyUSpt4yt6Gb7/
RSh3WQYT1Yw11yZW8cAZ7eUjS+lMxKTfWTRuxPmS33/dFbMoob2NvY0HPnyq
+1UUs+Yk42xuDw+UGH3P9fcTE52fenv38iAPvNQ+dZkPXw+aOZO7fowHygiP
NVphfjPHO1Q7wQON9JiKY5grFopFb87xwCDdfSez8fNpS1cPqa3ywBVLVZEC
HJ/AqoLnAAcvFJD127WM41dj6UqM5eeFPFOWrkF4fGZs0fX6orww3rfwwoEc
JvLl0F2el+SFyi8SX+/PY6IXXLPKHzfxwlW2+59v5DNRCc8HC+utvPCV5RzX
UiETDfDZhAtv54WfrziuFhYzEZeg6NeyXbzw13OhgW+lTLRNuHLYS4cXjnt8
HVnB8+kptkOv4ygvVLyuk3OklolixQeu3jfihencUZ4nGpno67qnb/af4YWc
lps0Hrcw0eqG1ZU39rzwZ1bVLUoPE8nLfFE1c+aFDmWL0qMUJtKXvWTJ6ckL
A4nZ3p1UJora0pDvHMQLF9+p+vj9ZaKsrSHUDWG8sPonhL7zTNSqpCnRcJ8X
sqxqkLPwepfenuil8YwXhrIeGWngJ9CHPR47lr7wQnos82UYrrcbtOSt0wtw
+1+79yqpEeivdtuDC6W8MLbu7a0ZLQJpHzw4+r2eF57t1M1dO4r9hb5QciSN
Fzr+fTDu4Eyg4bMZ62Vk+KDY5V+eNZ/weXpupdxqCx8M6/gZopNDICcLQ7cE
ZT7YnW45HfiNQGPnx0oktfjgOt3NdpbVBPpkqe109gAf/J39XJbWSCB3q3DS
Uz18/6NNA0ptBJqw3uooZswHz7aN6KRSCPTFxkfQ1JwPNm9+7vkbn69eFyry
Yqz4IJsVifwc6/duWzHbRns+qH5lo+Q4gfXC1p5XyJkPFimcoFTg8z3f7vMX
wyt8cOHRmp3sHIEC7FmsHvjwQZFiEc15rB86Dqc4a27wwZWHK0VHsf4sOyRm
8ITwQWt+X3V+rFcljoyzR8P54IyOdfG/z3duXdzPejeaD5ZK7In49/4evPTg
Q0UsH7y4fnflzL/35S53mbEn8EFd7eAvvpgrLm9bOfQW3+91If4y7u+Ok3/K
7VQ+mKFmW1aDn6fv/PMUSsf32wp4vcP6xuMisbCSzQefLWT+msHx1rhcTNpf
yAf/PNneWjlNoAeuOSdulPJBHsG+TdLYnxi6sc8UVPLB9y+ezS1hfRJyN02c
r8Pjvd4l5Y71qdH97VGtFj4oLrvloy/WoxiPiQmfTj44VrqPJIv1SMwzWm9q
mA96J/xq9sR60+rZS1en88Gh56oPFOuwP7iq+tTzLx+Mun3z88sfBJL0qqEx
Vvlg/ljG5n7s92R8uaJp6/jhppBauUcvCKQceLOj14AfPj4kT+23JhA9sD5Y
2pgfyi48kAgwJ1B6kLSKpTk/PFd447XSKQKp3SoM6rDnhxOpvJZdEOtpyKx8
yw1+ODx77HirAoHmQ47UkUL44YLBiT7vTQQqCI31MQ7nh59sJaLgegLtv6NR
VR/LD/d/ORR7QZBAh8I93KvS+SH3wMuy/jkmkvrSdzY6hx+aKpZ7P8P7Z7rb
WPf0N364em9jdhSDiVJ27lrXX8UPb5w8m7VriIluWySzpjTywz5Jcvgw1gOL
UHG6axs/TMjnlGvHeiDQPlc6N8gPn7iP+VzHejDM4vyxeIwfdvV/slJtxueJ
cldc6CQ/9Ku/by3TwETPTp+4bTDPDwvoLMbG+Hy4erPIRXiNHy4nrZ8pq2Ki
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
d97A4iHWN/8D1uYIKA==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t (s)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(y\\), \\(1\\)]\\), \
\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(y\\), \\(2\\)]\\) (m)\"", 
     TraditionalForm]},
  AxesOrigin->{0, -2.0500000000000003`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\) and \\!\\(TraditionalForm\\`\
\\*SubscriptBox[\\(y\\), \\(2\\)]\\) vs time.\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6778973004164963`*^9, 3.677898002345842*^9, 
  3.680204790956587*^9, 3.680206335935893*^9, 3.680206536461204*^9, 
  3.68020673062199*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1050, 851},
WindowMargins->{{192, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 6, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 463, 9, 183, "Title"],
Cell[CellGroupData[{
Cell[1067, 35, 99, 1, 80, "Section"],
Cell[1169, 38, 1289, 21, 204, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2495, 64, 284, 4, 80, "Section"],
Cell[2782, 70, 21105, 369, 278, "Text"],
Cell[CellGroupData[{
Cell[23912, 443, 301, 4, 54, "Subsection"],
Cell[24216, 449, 1852, 33, 63, "Text"],
Cell[26071, 484, 1648, 51, 78, "Input"],
Cell[27722, 537, 1473, 22, 37, "Text"],
Cell[CellGroupData[{
Cell[29220, 563, 1076, 33, 56, "Input"],
Cell[30299, 598, 2990, 82, 70, "Output"]
}, Open  ]],
Cell[33304, 683, 1642, 24, 37, "Text"],
Cell[CellGroupData[{
Cell[34971, 711, 294, 6, 56, "Input"],
Cell[35268, 719, 1717, 47, 39, "Output"]
}, Open  ]],
Cell[37000, 769, 1780, 33, 39, "Text"],
Cell[CellGroupData[{
Cell[38805, 806, 684, 16, 56, "Input"],
Cell[39492, 824, 1233, 33, 36, "Output"]
}, Open  ]],
Cell[40740, 860, 1624, 25, 37, "Text"],
Cell[CellGroupData[{
Cell[42389, 889, 340, 6, 56, "Input"],
Cell[42732, 897, 1040, 27, 36, "Output"]
}, Open  ]],
Cell[43787, 927, 1609, 24, 37, "Text"],
Cell[CellGroupData[{
Cell[45421, 955, 278, 6, 55, "Input"],
Cell[45702, 963, 2287, 66, 63, "Output"]
}, Open  ]],
Cell[48004, 1032, 1579, 23, 37, "Text"],
Cell[CellGroupData[{
Cell[49608, 1059, 814, 18, 55, "Input"],
Cell[50425, 1079, 1208, 34, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51670, 1118, 856, 18, 55, "Input"],
Cell[52529, 1138, 1275, 33, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53841, 1176, 898, 20, 55, "Input"],
Cell[54742, 1198, 1302, 34, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56081, 1237, 896, 20, 55, "Input"],
Cell[56980, 1259, 1167, 29, 39, "Output"]
}, Open  ]],
Cell[58162, 1291, 1777, 30, 39, "Text"],
Cell[CellGroupData[{
Cell[59964, 1325, 852, 18, 56, "Input"],
Cell[60819, 1345, 2744, 72, 68, "Output"]
}, Open  ]],
Cell[63578, 1420, 1800, 30, 39, "Text"],
Cell[CellGroupData[{
Cell[65403, 1454, 952, 19, 56, "Input"],
Cell[66358, 1475, 1985, 51, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68392, 1532, 331, 4, 54, "Subsection"],
Cell[68726, 1538, 1703, 23, 37, "Text"],
Cell[70432, 1563, 668, 16, 56, "Input"],
Cell[71103, 1581, 1698, 25, 37, "Text"],
Cell[CellGroupData[{
Cell[72826, 1610, 1366, 37, 56, "Input"],
Cell[74195, 1649, 23346, 449, 151, "Output"]
}, Open  ]],
Cell[97556, 2101, 1014, 22, 39, "Text"],
Cell[CellGroupData[{
Cell[98595, 2127, 1416, 33, 77, "Input"],
Cell[100014, 2162, 81812, 1356, 315, "Output"]
}, Open  ]],
Cell[181841, 3521, 999, 13, 37, "Text"],
Cell[CellGroupData[{
Cell[182865, 3538, 1526, 33, 77, "Input"],
Cell[184394, 3573, 77648, 1285, 331, "Output"]
}, Open  ]],
Cell[262057, 4861, 1051, 14, 37, "Text"],
Cell[CellGroupData[{
Cell[263133, 4879, 2310, 52, 98, "Input"],
Cell[265446, 4933, 2433, 49, 531, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267928, 4988, 296, 4, 54, "Subsection"],
Cell[268227, 4994, 1403, 27, 39, "Text"],
Cell[269633, 5023, 1620, 24, 37, "Text"],
Cell[CellGroupData[{
Cell[271278, 5051, 911, 20, 56, "Input"],
Cell[272192, 5073, 1573, 44, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273802, 5122, 911, 20, 56, "Input"],
Cell[274716, 5144, 1517, 42, 60, "Output"]
}, Open  ]],
Cell[276248, 5189, 1736, 25, 37, "Text"],
Cell[CellGroupData[{
Cell[278009, 5218, 1510, 38, 98, "Input"],
Cell[279522, 5258, 23335, 448, 151, "Output"]
}, Open  ]],
Cell[302872, 5709, 1014, 22, 39, "Text"],
Cell[CellGroupData[{
Cell[303911, 5735, 1416, 33, 77, "Input"],
Cell[305330, 5770, 81790, 1356, 315, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
